(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{534:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("这两天一直在鼓捣Linux系统，想着老是用国外的github平台，访问速度又慢，下载上传速度也慢，不由自主的自己也想搭个私服啥的，专门供自己使用作为代码托管，想想就兴奋，于是开工了。")])]),t._v(" "),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),s("ul",[s("li",[t._v("安装")]),t._v(" "),s("li",[t._v("配置")]),t._v(" "),s("li",[t._v("运行")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("ul",[s("li",[t._v("准备一台云服务器")])]),t._v(" "),s("p",[t._v("阿里云、腾讯云、百度云等等都可以。")]),t._v(" "),s("ul",[s("li",[t._v("下载"),s("a",{attrs:{href:"https://dl.gogs.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("gogs"),s("OutboundLink")],1),t._v("软件到服务器")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/download\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://dl.gogs.io/0.11.91/gogs_0.11.91_linux_amd64.tar.gz\n")])])]),s("ul",[s("li",[t._v("解压文件")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxv -f gogs_0.11.91_linux_amd64.tar.gz /usr/local/src\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/src\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" gogs_0.11.91_linux_amd64 gogs\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" gogs /usr/local/web\n")])])]),s("h2",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("ul",[s("li",[t._v("新建文件夹")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p custom/conf\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" custom/conf\n")])])]),s("ul",[s("li",[t._v("自定义"),s("code",[t._v("app.ini")]),t._v("文件")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/gogs/gogs/blob/master/conf/app.ini",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考配置"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !!! NEVER EVER MODIFY THIS FILE !!!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !!! PLEASE MAKE CHANGES ON CORRESPONDING CUSTOM CONFIG FILE !!!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !!! IF YOU ARE PACKAGING PROVIDER, PLEASE MAKE OWN COPY OF IT !!!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; App name that shows on every page title")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("APP_NAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Gogs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; The name of the system user that runs Gogs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("RUN_USER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; Either "dev", "prod" or "test"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("RUN_MODE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("dev")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PROTOCOL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DOMAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("localhost")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ROOT_URL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("%(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("HTTP_ADDR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0.0.0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("HTTP_PORT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("3000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Permission for unix socket")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("UNIX_SOCKET_PERMISSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("666")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Local (DMZ) URL for Gogs workers (such as SSH update) accessing web service.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; In most cases you do not need to change the default value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Alter it only if your SSH server node is not the same as HTTP node.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("LOCAL_ROOT_URL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("%(PROTOCOL)s://%(HTTP_ADDR)s:%(HTTP_PORT)s/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Disable SSH feature when not available")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DISABLE_SSH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Whether use builtin SSH server or not.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("START_SSH_SERVER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Domain name to be exposed in SSH clone URL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_DOMAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("%(DOMAIN)s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Port number to be exposed in SSH clone URL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_PORT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("22")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Network interface builtin SSH server listens on")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_LISTEN_HOST")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0.0.0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Port number builtin SSH server listens on")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_LISTEN_PORT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("%(SSH_PORT)s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Root path of SSH directory, default is '~/.ssh', but you have to use '/home/git/.ssh'.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_ROOT_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Indicate whether to rewrite authorized_keys at start, ignored when use builtin SSH server")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("REWRITE_AUTHORIZED_KEYS_AT_START")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Choose the ciphers to support for SSH connections")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_SERVER_CIPHERS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, arcfour256, arcfour128")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Directory to create temporary files when test publick key using ssh-keygen,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; default is system temporary directory.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_KEY_TEST_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Path to ssh-keygen, default is 'ssh-keygen' and let shell find out which one to call.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSH_KEYGEN_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ssh-keygen")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Indicate whether to check minimum key size with corresponding type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MINIMUM_KEY_SIZE_CHECK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; Disable CDN even in "prod" mode')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("OFFLINE_MODE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DISABLE_ROUTER_LOG")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Generate steps:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; $ ./gogs cert -ca=true -duration=8760h0m0s -host=myhost.example.com")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Or from a .pfx file exported from the Windows certificate store (do")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; not forget to export the private key):")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; $ openssl pkcs12 -in cert.pfx -out cert.pem -nokeys")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; $ openssl pkcs12 -in cert.pfx -out key.pem -nocerts -nodes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("CERT_FILE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("custom/https/cert.pem")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("KEY_FILE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("custom/https/key.pem")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Allowed TLS version values: SSL30, TLS10, TLS11, TLS12")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("TLS_MIN_VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("TLS10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Upper level of template and static file path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; default is the path where Gogs is executed")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("STATIC_ROOT_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Default path for App data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("APP_DATA_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Application level GZIP support")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_GZIP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; Landing page for non-logged users, can be "home" or "explore"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("LANDING_PAGE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("home")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; Root path for storing repositories\'s data, default is "~/<username>/gogs-repositories"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ROOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; The script type server supports, sometimes could be "sh"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SCRIPT_TYPE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Default ANSI charset for an unrecognized charset")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ANSI_CHARSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Force every new repository to be private")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("FORCE_PRIVATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Global maximum creation limit of repository per user, -1 means no limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MAX_CREATION_LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("-1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Mirror sync queue length, increase if mirror syncing starts hanging")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MIRROR_QUEUE_LENGTH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Patch test queue length, increase if pull request patch testing starts hanging")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PULL_REQUEST_QUEUE_LENGTH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Preferred Licenses to place at the top of the list")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Name must match file name in conf/license or custom/conf/license")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PREFERRED_LICENSES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Apache License 2.0,MIT License")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Disable ability to interact with repositories by HTTP protocol")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DISABLE_HTTP_GIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Enable ability to migrate repository by local path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_LOCAL_PATH_MIGRATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Concurrency is used to retrieve commits information. This variable define")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; the maximum number of tasks that can be run at the same time. Usually, the")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; value depend of how many CPUs (cores) you have. If the value is set to zero")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; or under, Gogs will automatically detect the number of CPUs your system have")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("COMMITS_FETCH_CONCURRENCY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Enable render mode for raw file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_RAW_FILE_RENDER_MODE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("repository.editor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; List of file extensions that should have line wraps in the CodeMirror editor.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Separate extensions with a comma. To line wrap files without extension, just put a comma")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("LINE_WRAP_EXTENSIONS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v(".txt,.md,.markdown,.mdown,.mkd,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Valid file modes that have a preview API associated with them, such as api/v1/markdown.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Separate values by commas. Preview tab in edit mode won't show if the file extension doesn't match")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PREVIEWABLE_FILE_MODES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("markdown")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("repository.upload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Enable repository file uploads.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Path to temporarily store uploads (default path gets cleaned by Gogs in every start)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("TEMP_PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("data/tmp/uploads")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; File types that are allowed to be uploaded, e.g. image/jpeg|image/png. Leave empty means allow any file type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ALLOWED_TYPES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Maximum size of each file in MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("FILE_MAX_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Maximum number of files per upload")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MAX_FILES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Attachment settings for releases")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("release.attachment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Whether attachments are enabled. Defaults to `true`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Path for attachments. Defaults to `data/attachments`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("data/attachments")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; One or more allowed types, e.g. image/jpeg|image/png")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ALLOWED_TYPES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("*/*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Max size of each file. Defaults to 32MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MAX_SIZE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("32")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Max number of files per upload. Defaults to 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("MAX_FILES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; Either "mysql", "postgres" or "sqlite3", you can connect to TiDB with MySQL protocol')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DB_TYPE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("mysql")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("HOST")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("127.0.0.1:3306")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("NAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("gogs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("USER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("root")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PASSWD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; For "postgres" only, either "disable", "require" or "verify-full"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SSL_MODE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("disable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; For "sqlite3" and "tidb", use absolute path when you start as service')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("PATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("data/gogs.db")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("security")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("INSTALL_LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; !!CHANGE THIS TO KEEP YOUR USER DATA SAFE!!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("SECRET_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("!#@FDEWREWR&*(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Auto-login remember days")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("LOGIN_REMEMBER_DAYS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("COOKIE_USERNAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("gogs_awesome")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("COOKIE_REMEMBER_NAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("gogs_incredible")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("COOKIE_SECURE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Reverse proxy authentication header name of user name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("REVERSE_PROXY_AUTHENTICATION_USER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("X-WEBAUTH-USER")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Enable to set cookie to indicate user login status")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_LOGIN_STATUS_COOKIE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("LOGIN_STATUS_COOKIE_NAME")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("login_status")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ACTIVE_CODE_LIVE_MINUTES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("180")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("RESET_PASSWD_CODE_LIVE_MINUTES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("180")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; User need to confirm e-mail for registration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("REGISTER_EMAIL_CONFIRM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Does not allow register and admin create account only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("DISABLE_REGISTRATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; User must sign in to view anything.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("REQUIRE_SIGNIN_VIEW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Mail notification")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_NOTIFY_MAIL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; More detail: https://github.com/gogits/gogs/issues/165")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_REVERSE_PROXY_AUTHENTICATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_REVERSE_PROXY_AUTO_REGISTRATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Enable captcha validation for registration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ENABLE_CAPTCHA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),s("ul",[s("li",[t._v("启动服务")])]),t._v(" "),s("p",[t._v("输入"),s("code",[t._v("./gogs web")]),t._v("即可成功运行。")]),t._v(" "),s("p",[t._v("**注意：**如果想要在退出ssh客户端后继续在后台运行，可以使用下面这个命令。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./gogs web "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),s("ul",[s("li",[t._v("创建同名用户和数据库")])]),t._v(" "),s("p",[t._v("登录mysql数据库，创建用户和数据库，添加数据库权限到用户。")]),t._v(" "),s("ul",[s("li",[t._v("安装配置文件")])]),t._v(" "),s("p",[t._v("打开游览器打开 "),s("code",[t._v("http://{IP}:3000/install")]),t._v(" ，就可以看到配置填写界面，填完以后就可以访问了。")]),t._v(" "),s("ul",[s("li",[t._v("预览")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/profile.png",alt:"gogs"}})]),t._v(" "),s("h2",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),s("p",[t._v("搭建自己的git服务器就到这里了。")])])}),[],!1,null,null,null);a.default=n.exports}}]);