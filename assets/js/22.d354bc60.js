(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{486:function(a,t,s){"use strict";s.r(t);var r=s(10),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("随着Linux容器管理技术和工具的进步，诞生了docker等一大批著名的容器管理工具，现在介绍一下这个docker的容器管理工具的安装。")])]),a._v(" "),s("h2",{attrs:{id:"portainer简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#portainer简介"}},[a._v("#")]),a._v(" portainer简介")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.portainer.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网地址"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://portainer.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[a._v("技术文档"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("Portainer is a lightweight management UI which allows you to easily manage your different Docker environments (Docker hosts or Swarm clusters). Portainer is meant to be as simple to deploy as it is to use. It consists of a single container that can run on any Docker engine (can be deployed as Linux container or a Windows s native container, supports other platforms too). Portainer allows you to manage all your Docker resources (containers, images, volumes, networks and more) ! It is compatible with the standalone Docker engine and with Docker Swarm mode.")]),a._v(" "),s("p",[a._v("翻译如下：")]),a._v(" "),s("p",[a._v("Portainer是一个轻量级的管理UI，可让您轻松管理不同的Docker环境（Docker主机或Swarm集群）。 Portainer的意图是易于部署和使用。 它由一个可以在任何Docker引擎上运行的容器组成（可以部署为Linux容器或Windows s本机容器，也支持其他平台）。 Portainer允许您管理所有Docker资源（容器，映像，卷，网络等）！ 它与独立的Docker引擎和Docker Swarm模式兼容。")]),a._v(" "),s("h2",{attrs:{id:"使用docker安装portainer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用docker安装portainer"}},[a._v("#")]),a._v(" 使用Docker安装Portainer")]),a._v(" "),s("p",[a._v("Portainer由两个元素组成，即Portainer服务器和Portainer代理。这两个元素都作为轻量级Docker容器在Docker引擎或Swarm集群中运行。由于Docker的性质，存在许多可能的部署方案，但是，我们在下面详细介绍了最常见的方案。请使用与您的配置匹配的方案（或者，如果未列出您的配置，请参见portainer.readthedocs.io以获取其他选项）。")]),a._v(" "),s("h3",{attrs:{id:"单机管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单机管理"}},[a._v("#")]),a._v(" 单机管理")]),a._v(" "),s("h4",{attrs:{id:"windows-平台安装方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-平台安装方法"}},[a._v("#")]),a._v(" Windows 平台安装方法")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("docker pull portainer/portainer\ndocker volume create portainer_data\ndocker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":8000 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),a._v(":9000 --name portainer --restart always -v "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine -v portainer_data:C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("data portainer/portainer\n")])])]),s("p",[s("strong",[a._v("注意：")]),a._v(" "),s("code",[a._v("\\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine")]),a._v("只能在Windows s 1803+环境下面使用。")]),a._v(" "),s("h4",{attrs:{id:"linux平台安装方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux平台安装方法"}},[a._v("#")]),a._v(" Linux平台安装方法")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("docker pull portainer/portainer\ndocker volume create portainer_data\ndocker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":8000 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),a._v(":9000 --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("portainer --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer\n")])])]),s("p",[s("strong",[a._v("注意：")]),a._v(" "),s("code",[a._v("-v /var/run/docker.sock:/var/run/docker.sock")]),a._v(" 只能在Linux环境中使用。")]),a._v(" "),s("h4",{attrs:{id:"配置站点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置站点"}},[a._v("#")]),a._v(" 配置站点")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("打开游览器，输入"),s("code",[a._v("http://localhost:9000")]),a._v("（Windows平台）或者"),s("code",[a._v("http://{服务器ip}:9000")]),a._v("（Linux平台）；")])]),a._v(" "),s("li",[s("p",[a._v("设置用户名和密码后进入。")])])]),a._v(" "),s("p",[s("img",{attrs:{src:"/img/portainer-login.jpg",alt:"docker面板"}})]),a._v(" "),s("ul",[s("li",[a._v("管理面板")])]),a._v(" "),s("p",[s("img",{attrs:{src:"/img/portainer-set.jpg",alt:"docker面板"}})]),a._v(" "),s("h3",{attrs:{id:"集群管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群管理"}},[a._v("#")]),a._v(" 集群管理")]),a._v(" "),s("h4",{attrs:{id:"windows-集群管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-集群管理"}},[a._v("#")]),a._v(" Windows 集群管理")]),a._v(" "),s("p",[a._v("部署Portainer代理可以来管理Windows 2016（1803）或Windows 2019（10903）Swarm，你可以将Portainer作为服务直接部署在Docker集群中。")]),a._v(" "),s("p",[a._v("请注意，此方法将自动部署Portainer Server的单个实例，并将Portainer Agent作为全局服务部署在群集中的每个节点上。")]),a._v(" "),s("p",[a._v("方法如下：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://downloads.portainer.io/portainer_windows_stack.yml -o portainer_windows_stack.yml\ndocker stack deploy --compose-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("portainer_windows_stack.yml portainer\n")])])]),s("p",[a._v("注意：请确保集群中的服务器docker主机公开了所需的网络端口。")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("netsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster_management"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("TCP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2377")]),a._v("\nnetsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"node_communication_tcp"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("TCP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7946")]),a._v("\nnetsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"node_communication_udp"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("UDP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7946")]),a._v("\nnetsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"overlay_network"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("UDP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4789")]),a._v("\nnetsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"swarm_dns_tcp"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("TCP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("53")]),a._v("\nnetsh advfirewall firewall "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" rule "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"swarm_dns_udp"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("in "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("action")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("allow "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("protocol")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("UDP "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("localport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("53")]),a._v("\n")])])]),s("p",[a._v("补充：")]),a._v(" "),s("ul",[s("li",[a._v("独立的Windows server 2016 docker主机代理")])]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("docker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(":9001 --name portainer_agent --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always -v "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine portainer/agent\n")])])]),s("ul",[s("li",[a._v("作为节点的主机代理")])]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("docker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(":9001 --name portainer_agent --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always -v "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("docker_engine -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AGENT_CLUSTER_ADDR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tasks.agent portainer/agent\n")])])]),s("h4",{attrs:{id:"linux集群管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux集群管理"}},[a._v("#")]),a._v(" linux集群管理")]),a._v(" "),s("p",[a._v("在远程LINUX群集上将Portainer Agent部署为Swarm服务，在远程群集中的管理节点上运行此命令:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create --name portainer_agent --network portainer_agent_network --publish "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("host,target"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(",published"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("AGENT_CLUSTER_ADDR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tasks.portainer_agent --mode global --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bind,src"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("//var/run/docker.sock,dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/var/run/docker.sock --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bind,src"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("//var/lib/docker/volumes,dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/var/lib/docker/volumes –-mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bind,src"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/,dst"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/host portainer/agent\n")])])]),s("h2",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[a._v("#")]),a._v(" 最后")]),a._v(" "),s("p",[a._v("docker容器UI管理工具Portainer的使用方法就介绍到这里。")])])}),[],!1,null,null,null);t.default=e.exports}}]);