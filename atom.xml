<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>猿七笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://guanqi.xyz/"/>
  <updated>2019-08-12T13:53:27.997Z</updated>
  <id>https://guanqi.xyz/</id>
  
  <author>
    <name>猿七</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>构建vue应用方法总结</title>
    <link href="https://guanqi.xyz//note/vue-build-project/"/>
    <id>https://guanqi.xyz//note/vue-build-project/</id>
    <published>2019-08-12T13:54:21.000Z</published>
    <updated>2019-08-12T13:53:27.997Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：踏入前端以后，我接触的第二个js框架就是vuejs，第一个jQuery。vuejs的虚拟dom和数据双向绑定，mvvm设计模式都挺吸引我的，还有那模板编译语法，组件化开发以及路由管理、状态管理，组成了一个生态系统。今天这篇主要是介绍如何构建一个vue应用。</p></blockquote><h2 id="构建方法"><a href="#构建方法" class="headerlink" title="构建方法"></a>构建方法</h2><p>我认为有以下几个比较好的方法。</p><ul><li>原生引入<a href="https://cn.vuejs.org" target="_blank" rel="noopener">vue</a></li></ul><p>如果你不想使用脚手架，可以使用原生方式构建轻量级vue应用。</p><ul><li>Vue-cli脚手架</li></ul><p>这种是伴随着nodejs的和前端工程化的迅猛发展，还有webpack等构建工具的诞生，有了脚手架开发这一非常便捷的开发方式。</p><ul><li>自建脚手架开发</li></ul><p>vuejs官方开发的脚手架固然好用，但是仍要了解如何搭建一款自己的webpack脚手架开发工具。</p><h2 id="原生引入vue"><a href="#原生引入vue" class="headerlink" title="原生引入vue"></a>原生引入vue</h2><p>这种方法是属于比较简单的页面开发方式，不需要webpack打包工具，不需要下载很大包，只需要引入必要的css和js即可实现简单项目开发。</p><ul><li>引入vuejs，vue-router,vuex</li></ul><p>可以本地引入，也可以使用cdn。</p><p>推荐几个比较不错的cdn服务网站。</p><ul><li><a href="https://www.bootcdn.cn/" target="_blank" rel="noopener">bootcdn</a></li><li><a href="http://lib.sinaapp.com/" target="_blank" rel="noopener">新浪cdn</a></li><li><a href="http://jscdn.upai.com/" target="_blank" rel="noopener">又拍云cdn</a></li><li><a href="http://cdnjs.net/" target="_blank" rel="noopener">cdnjs.net</a></li><li><a href="https://cdnjs.com/" target="_blank" rel="noopener">cdnjs.com</a></li><li><a href="http://staticfile.org/" target="_blank" rel="noopener">七牛云cdn</a></li><li><a href="https://www.jsdelivr.com/" target="_blank" rel="noopener">jsdelivr</a></li><li><a href="https://unpkg.com" target="_blank" rel="noopener">unpkg</a></li></ul><p>在网页的head里面加入以下js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//本地引入</span></span><br><span class="line">&lt;script src=<span class="string">"js/vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"js/vue-router.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"js/vuex.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用cdn(bootcdn)</span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/vue/2.6.10/vue.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/vue-router/3.0.7/vue-router.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/vuex/3.1.1/vuex.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>在body里面写vuejs的模板内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>, <span class="comment">//vue模板id</span></span><br><span class="line">  data: &#123; <span class="comment">// 数据对象</span></span><br><span class="line">    title: <span class="string">'hello, vuejs'</span>, <span class="comment">//定义的变量</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123; <span class="comment">//方法</span></span><br><span class="line">    print () &#123;</span><br><span class="line">      <span class="comment">// some things</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 。。。</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>我认为这就是一个简单的vue应用，里面是一个vue实例，还可以注册全局和内部组件，多个页面就组成一个简单的站点。如果你想写单页面应用，可以使用vue的路由管理，只写一个页面，然后定义不同的组件，注册到vm的实例里面使用。</p><h2 id="Vue-cli脚手架"><a href="#Vue-cli脚手架" class="headerlink" title="Vue-cli脚手架"></a>Vue-cli脚手架</h2><p>这种方法是比较常用的广泛使用的，下面说一下使用方法，确保你的电脑上一定要装node和npm环境。</p><ul><li>安装node和npm</li><li>全局安装vue-cli</li><li>创建启动vue项目</li></ul><h3 id="安装node和npm"><a href="#安装node和npm" class="headerlink" title="安装node和npm"></a>安装node和npm</h3><p>打开<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官网</a>,选择适合你电脑的软件包，下载安装到电脑上。</p><p>打开cmd，输入以下命令，有输出版本号即是安装成功。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v10.15.3</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line">6.4.1</span><br></pre></td></tr></table></figure><h3 id="全局安装vue-cli"><a href="#全局安装vue-cli" class="headerlink" title="全局安装vue-cli"></a>全局安装vue-cli</h3><p>这里使用3.x版本的脚手架。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装</span></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">vue -V</span><br><span class="line">3.6.3</span><br></pre></td></tr></table></figure><p>如果你想使用2.x版本的脚手架，可以这样安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装旧版本</span></span><br><span class="line">npm install -g @vue/cli-init</span><br></pre></td></tr></table></figure><h3 id="创建启动vue项目"><a href="#创建启动vue项目" class="headerlink" title="创建启动vue项目"></a>创建启动vue项目</h3><ul><li>3.x启动项目</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用命令行创建项目</span></span><br><span class="line">vue create myapp</span><br><span class="line"><span class="comment"># 使用图形界面创建项目</span></span><br><span class="line">vue ui</span><br><span class="line"><span class="comment"># 启动项目</span></span><br><span class="line">npm run serve</span><br><span class="line"><span class="comment"># 打包项目</span></span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><ul><li>2.x启动项目</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你熟悉的方法</span></span><br><span class="line">vue init webpack myapp</span><br><span class="line"><span class="comment"># 启动项目</span></span><br><span class="line">npm run dev</span><br><span class="line"><span class="comment"># 打包项目</span></span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><h2 id="自建脚手架开发"><a href="#自建脚手架开发" class="headerlink" title="自建脚手架开发"></a>自建脚手架开发</h2><p>这种方法就比较广泛了，不仅适用于vue，也适用于其他框架，这次使用webpack来进行搭建脚手架。如果你不熟悉webpack，可以读<a href="https://guanqi.xyz/note/first-knowledge-of-webpack/">这篇文章</a>了解一下。示例在github上面，可以参考一下。<a href="https://github.com/gitguanqi/febuild-cli" target="_blank" rel="noopener">febuild-cli</a>。</p><ul><li>初始化项目</li><li>安装依赖包</li><li>配置文件</li><li>启动运行</li><li>打包</li></ul><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>使用npm命令建一个私有包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -y表示一路回车</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><p>包很多，我就不一一阐述了,这里直接上json文件。复制到你的json文件中，执行<code>npm install</code>安装所有用到的依赖包。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"my-cli"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"my cli"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"dev:vue"</span>: <span class="string">"webpack-dev-server --open --config ./build/webpack.config.js"</span>,</span><br><span class="line">    <span class="attr">"build:vue"</span>: <span class="string">"webpack --config ./build/webpack.base.js"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@babel/core"</span>: <span class="string">"^7.4.4"</span>,</span><br><span class="line">    <span class="attr">"@babel/preset-env"</span>: <span class="string">"^7.4.4"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^8.0.6"</span>,</span><br><span class="line">    <span class="attr">"clean-webpack-plugin"</span>: <span class="string">"^2.0.2"</span>,</span><br><span class="line">    <span class="attr">"css-loader"</span>: <span class="string">"^2.1.1"</span>,</span><br><span class="line">    <span class="attr">"csv-loader"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"^4.16.4"</span>,</span><br><span class="line">    <span class="attr">"extract-text-webpack-plugin"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"file-loader"</span>: <span class="string">"^3.0.1"</span>,</span><br><span class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="attr">"less-loader"</span>: <span class="string">"^5.0.0"</span>,</span><br><span class="line">    <span class="attr">"mini-css-extract-plugin"</span>: <span class="string">"^0.6.0"</span>,</span><br><span class="line">    <span class="attr">"node-sass"</span>: <span class="string">"^4.12.0"</span>,</span><br><span class="line">    <span class="attr">"postcss-loader"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="attr">"raw-loader"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="attr">"sass-loader"</span>: <span class="string">"^7.1.0"</span>,</span><br><span class="line">    <span class="attr">"style-loader"</span>: <span class="string">"^0.23.1"</span>,</span><br><span class="line">    <span class="attr">"ts-loader"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"uglifyjs-webpack-plugin"</span>: <span class="string">"^2.1.2"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.31.0"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-middleware"</span>: <span class="string">"^3.6.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.3.1"</span>,</span><br><span class="line">    <span class="attr">"webpack-merge"</span>: <span class="string">"^4.2.1"</span>,</span><br><span class="line">    <span class="attr">"xml-loader"</span>: <span class="string">"^1.2.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"axios"</span>: <span class="string">"^0.18.0"</span>,</span><br><span class="line">    <span class="attr">"lodash"</span>: <span class="string">"^4.17.11"</span>,</span><br><span class="line">    <span class="attr">"url-loader"</span>: <span class="string">"^1.1.2"</span>,</span><br><span class="line">    <span class="attr">"vue"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="attr">"vue-loader"</span>: <span class="string">"^15.7.0"</span>,</span><br><span class="line">    <span class="attr">"vue-router"</span>: <span class="string">"^3.0.6"</span>,</span><br><span class="line">    <span class="attr">"vue-style-loader"</span>: <span class="string">"^4.1.2"</span>,</span><br><span class="line">    <span class="attr">"vue-template-compiler"</span>: <span class="string">"^2.6.10"</span>,</span><br><span class="line">    <span class="attr">"vuex"</span>: <span class="string">"^3.1.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>接着写配置文件，创建三个webpack的配置文件，放在build文件夹下。</p><ul><li>基础配置文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存为webpack.common.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> htmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> cleanHtmlPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> VueloaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'static/js/[name].[hash].js'</span>,</span><br><span class="line">    publicPath: <span class="string">'/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: MiniCssExtractPlugin.loader,</span><br><span class="line">            options: &#123;</span><br><span class="line">              publicPath: <span class="string">'/'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: MiniCssExtractPlugin.loader,</span><br><span class="line">            options: &#123;</span><br><span class="line">              publicPath: <span class="string">'/'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">'style-loader'</span>,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          <span class="string">'sass-loader'</span></span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|svg|jpg|gif)$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'file-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: <span class="number">50000</span>,</span><br><span class="line">              outputPath: <span class="string">'static/image/'</span>,</span><br><span class="line">              filename: <span class="string">'[name].[ext]'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(woff|woff2|eot|ttf|otf)$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'file-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: <span class="number">50000</span>,</span><br><span class="line">              filename: <span class="string">'static/fonts/[name].[ext]'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(csv|tsv)$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">'csv-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.xml$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">'xml-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          <span class="string">'vue-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> cleanHtmlPlugin(),</span><br><span class="line">    <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">      template: <span class="string">'./index.html'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> webpack.NamedModulesPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'static/css/[name].[hash].css'</span>,</span><br><span class="line">      chunkFilename: <span class="string">'[id].css'</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> VueloaderPlugin()</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>开发环境配置文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存为webpack.base.js</span></span><br><span class="line"><span class="comment">// 开发环境配置</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> common =<span class="built_in">require</span>(<span class="string">'./webpack.common.js'</span>);</span><br><span class="line"><span class="keyword">const</span> ASSET_PATH = process.env.ASSET_PATH || <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(common, &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    app: <span class="string">'./src/vue/main.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'../dist'</span>),</span><br><span class="line">    publicPath: ASSET_PATH</span><br><span class="line">  &#125;,</span><br><span class="line">  devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    contentBase: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    hot: <span class="literal">true</span>,</span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    port: <span class="number">8090</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>生成环境配置文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存为webpack.config.js</span></span><br><span class="line"><span class="comment">// 生产环境配置</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">'./webpack.common.js'</span>);</span><br><span class="line"><span class="keyword">const</span> uglifyjsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'uglifyjs-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> ASSET_PATH = process.env.ASSET_PATH || <span class="string">'/febuild-cli/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(common, &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    app: <span class="string">'./src/vue/main.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'../docs'</span>),</span><br><span class="line">    publicPath: ASSET_PATH</span><br><span class="line">  &#125;,</span><br><span class="line">  devtool: <span class="string">'source-map'</span>,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> uglifyjsWebpackPlugin(&#123;</span><br><span class="line">      sourceMap: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> webpack.DefinePlugin(&#123;</span><br><span class="line">      <span class="string">'process.env.NODE_ENV'</span>: <span class="built_in">JSON</span>.stringify(<span class="string">'production'</span>),</span><br><span class="line">      <span class="string">'process.env.ASSET_PATH'</span>: <span class="built_in">JSON</span>.stringify(ASSET_PATH)</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="启动运行"><a href="#启动运行" class="headerlink" title="启动运行"></a>启动运行</h3><p>在启动之前，先创建几个文件夹，用来编写vue文件。</p><p>目录如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span>src</span><br><span class="line">  + components</span><br><span class="line"><span class="code">    - hello.vue</span></span><br><span class="line">  + router</span><br><span class="line"><span class="code">    - index.js</span></span><br><span class="line">  - App.vue</span><br><span class="line">  - main.js</span><br></pre></td></tr></table></figure><p>运行npm命令启动项目。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev:vue</span><br></pre></td></tr></table></figure><p>在游览器打开<code>http://localhost:8090</code>或者是<code>http://127.0.0.1:8090</code>，即可访问站点。</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>这个就不仅简单了，直接运行命令<code>npm run build:vue</code>。  </p><p>安装http服务插件，在游览器打开<code>http://localhost:8090/dist/</code>或者是<code>http://127.0.0.1:8090/dist/</code>，即可访问站点。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>以上就是我日常开发过程中的vue应用搭建方法总结，有欠缺之处，还请各位大佬指正，谢谢，以上项目代码仅供学习交流使用，转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：踏入前端以后，我接触的第二个js框架就是vuejs，第一个jQuery。vuejs的虚拟dom和数据双向绑定，mvvm设计模式都挺吸引我的，还有那模板编译语法，组件化开发以及路由管理、状态管理，组成了一个生态
      
    
    </summary>
    
      <category term="vuejs" scheme="https://guanqi.xyz/categories/vuejs/"/>
    
    
      <category term="vuejs" scheme="https://guanqi.xyz/tags/vuejs/"/>
    
      <category term="vue项目" scheme="https://guanqi.xyz/tags/vue%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>前端跨域知识总结</title>
    <link href="https://guanqi.xyz//note/front-end-cross-origin/"/>
    <id>https://guanqi.xyz//note/front-end-cross-origin/</id>
    <published>2019-08-12T02:30:21.000Z</published>
    <updated>2019-08-12T13:54:23.129Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>: 在日常的开发过程中,跨域是一个令人头疼的事情,也在跨域的过程中学到了不少知识,也吃了不少跨域的亏,一直没有时间整理这部分的知识点,现在就我脑海中的跨域知识以及结合开发过程中遇到的坎进行一个系统的总结。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>跨域是什么</li><li>跨域解决方法</li></ul><h2 id="跨域是什么"><a href="#跨域是什么" class="headerlink" title="跨域是什么"></a>跨域是什么</h2><p>说到跨域,就不得不提游览器的<a href="https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy" target="_blank" rel="noopener">同源安全策略</a>。按照MDN所说，同源策略限制了从同一个源加载的文档或者脚本如何和来自另一个源的文档和脚本等资源进行交互，这是阻止恶意文件程序攻击的一个重要安全机制。</p><p>同源就是协议(http\https),域名（<a href="//www.taobao.com">www.taobao.com</a>）和端口号（80，8080）都相同，这才称之为同源，与之相对的皆是不同源，是跨域的范围了。</p><p>这里列一个表格来说明一下：</p><p>假设这里有一个url为<code>http://www.example.com/a.html</code>, 想要请求以下地址,默认端口为80。</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:left">url</th><th style="text-align:left">是否同源</th><th style="text-align:left">原因</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left"><code>http://www.example.com/b.html</code></td><td style="text-align:left">是</td><td style="text-align:left">协议、域名、端口相同，只是文件路径不同</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left"><code>https://www.example.com/c.html</code></td><td style="text-align:left">否</td><td style="text-align:left">协议不同（http\https）</td></tr><tr><td style="text-align:center">3</td><td style="text-align:left"><code>http://store.example.com/c.html</code></td><td style="text-align:left">否</td><td style="text-align:left">子域域名不同(www\store)</td></tr><tr><td style="text-align:center">4</td><td style="text-align:left"><code>http://www.example.com:81/c.html</code></td><td style="text-align:left">否</td><td style="text-align:left">端口不同(80/81)</td></tr><tr><td style="text-align:center">5</td><td style="text-align:left"><code>https://shop.example.com:82/c.html</code></td><td style="text-align:left">否</td><td style="text-align:left">协议、域名、端口都不同</td></tr></tbody></table><p><strong>注意</strong>：有时候w3c的标准到了ie这里就行不通了。所以根据ie游览器的标准，有两个不同点：一是授信范围，也就是高度互信的两个域名，不受同源限制；二是端口不同的两个域名，不受同源限制。</p><h2 id="跨域解决方法"><a href="#跨域解决方法" class="headerlink" title="跨域解决方法"></a>跨域解决方法</h2><p>据我所知，跨域有以下几种方法：</p><ul><li>jsonp方法，只适用于get请求</li><li>CROS，（跨域资源共享协议），适用于各种请求</li><li>domain设置，只适用于子域</li><li>post Message，适用于父子网页iframe通信</li></ul><h3 id="jsonp方法"><a href="#jsonp方法" class="headerlink" title="jsonp方法"></a>jsonp方法</h3><p>采用这种方法，是由于html标签<code>src</code>属性不受同源限制，下面就封装一个jsonp方法来进行跨域资源请求。</p><ul><li>原生方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonp</span>(<span class="params">&#123;url,callback&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">  script.src = <span class="string">`<span class="subst">$&#123;url&#125;</span>&amp;callback=<span class="subst">$&#123;callback&#125;</span>`</span>;</span><br><span class="line">  <span class="built_in">document</span>.head.appendChild(script);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个简单的案例：</p><p>先用node开一个3000端口，作为服务端，启动<code>node server.js</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存为server.js</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="keyword">const</span> queryString = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">const</span> data = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">  title: <span class="string">'hello,jsonp!'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> addr = url.parse(request.url);</span><br><span class="line">  <span class="keyword">if</span> (addr.pathname == <span class="string">'/jsonp'</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> cb = queryString.parse(addr.query).callback;</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span> &#125;)</span><br><span class="line">    response.write(cb + <span class="string">'('</span>+ data +<span class="string">')'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.writeHead(<span class="number">403</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain;charset=utf-8'</span> &#125;)</span><br><span class="line">    response.write(<span class="string">'403'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  response.end();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server is running on port 3000!'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>最后请求返回内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jsonp(&#123;</span><br><span class="line">  url: <span class="string">'http://localhost:3000/jsonp?from=1'</span>,</span><br><span class="line">  callback: <span class="string">'getData'</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res); <span class="comment">// &#123;title: "hello,jsonp!"&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>jquery方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://unpkg.com/jquery@3.4.1/dist/jquery.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'http://localhost:3000/jsonp?from=1'</span>,</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res); <span class="comment">// &#123;title: "hello,jsonp!"&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="CROS"><a href="#CROS" class="headerlink" title="CROS"></a>CROS</h3><p>CORS(Cross -Origin Resource Sharing),跨域资源共享，是一个W3C标准，在http的基础上发布的标准协议。</p><p>CORS需要游览器和服务器同时支持，解决了游览器的同源限制，使得跨域资源请求得以实现。它有两种请求，一种是简单请求，另外一种是非简单请求。</p><ul><li>简单请求</li></ul><p>满足以下两个条件就属于简单请求，反之非简单。</p><p>1)请求方式是<code>GET</code>、<code>POST</code>、<code>HEAD</code>;<br>2)响应头信息是<code>Accept</code>、<code>Accept-Language</code>、<code>Content-Language</code>、<code>Last-Event-ID</code>、<code>Content-Type</code>(只限于<code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code>);</p><p>简单请求有三个CORS字段需要加在响应头中，前面部分都是以<code>Access-Control</code>开头：</p><p>1.<code>Access-Control-Allow-Origin</code>,这个表示接受哪些域名的请求，如果是*号，那就是任何域名都可以请求；<br>2.<code>Access-Control-Allow-Credentials</code>,这个表示是否允许携带cookie，默认是false,不允许携带；</p><p>如果设置为<code>true</code>, 要发送cookie，允许域就必须指定域名方法；客户端http请求必须设置:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>3.<code>Access-Control-Expose-Headers</code>,这个表示服务器可接受的响应头字段，如果客户端发送过来请求携带的<code>Cache-Control</code>、<code>Content-Language</code>、<code>Content-Type</code>、<code>Expires</code>、<code>Last-Modified</code>,还有自定义请求头字段。</p><p>例如：请求一个本地get接口。</p><p>本地服务端开启访问限制，打开<code>server.js</code>，输入以下内容：设置允许域名为<code>http://localhost:8089</code>,允许访问请求方式是<code>POST</code>请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="keyword">const</span> queryString = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">const</span> data = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">  title: <span class="string">'hello,jsonp!'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> dataCors = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">  title: <span class="string">'hello,cors!'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> addr = url.parse(request.url);</span><br><span class="line">  response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">'http://localhost:8089'</span>);</span><br><span class="line">  response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"Content-Type"</span>);</span><br><span class="line">  response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>,<span class="string">"POST"</span>);</span><br><span class="line">  response.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">  <span class="keyword">if</span> (addr.pathname == <span class="string">'/jsonp'</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> cb = queryString.parse(addr.query).callback;</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span> &#125;)</span><br><span class="line">    response.write(cb + <span class="string">'('</span>+ data +<span class="string">')'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (addr.pathname == <span class="string">'/test'</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (request.method == <span class="string">'POST'</span>) &#123;</span><br><span class="line">      response.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span> &#125;)</span><br><span class="line">      response.write(dataCors);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.writeHead(<span class="number">404</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain;charset=utf-8'</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.writeHead(<span class="number">403</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain;charset=utf-8'</span> &#125;)</span><br><span class="line">    response.write(<span class="string">'403'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  response.end();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Server is running on port 3000!'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>express框架设置如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.all(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">  res.header(<span class="string">"Access-control-Allow-Headers"</span>, <span class="string">"X-Auth"</span>);</span><br><span class="line">  res.header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET,POST,DELETE,PUT,OPTIONS,HEAD,FETCH"</span>);</span><br><span class="line">  res.header(<span class="string">"Access-control-max-age"</span>, <span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>); <span class="comment">//测试通过</span></span><br><span class="line">  next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果使用<strong>get</strong>访问<code>http://localhost:3000/test</code>这个接口地址，那么就会报错404。</p><p>httpReq这个方法在<a href="https://blog.csdn.net/fed_guanqi/article/details/96142734" target="_blank" rel="noopener">这篇文章</a>查看。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getReqData</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> httpReq(&#123;</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    url: <span class="string">'http://localhost:3000/test'</span>,</span><br><span class="line">    data: <span class="literal">null</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line">getReqData();</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182146579.png" alt="cors_get.png" title="">                </div>                <div class="image-caption">cors_get.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182224237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="cors_get_req" title="">                </div>                <div class="image-caption">cors_get_req</div>            </figure><p>如果是<strong>post</strong>访问，就会返回正常内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getReqData</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> httpReq(&#123;</span><br><span class="line">    type: <span class="string">'post'</span>,</span><br><span class="line">    url: <span class="string">'http://localhost:3000/test'</span>,</span><br><span class="line">    data: <span class="literal">null</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line">getReqData();</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182258297.png" alt="post" title="">                </div>                <div class="image-caption">post</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/2019071818231027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="post" title="">                </div>                <div class="image-caption">post</div>            </figure><ul><li>非简单请求</li></ul><p>就是除了简单请求的几种方法外，比如说<code>PUT</code>请求、<code>DELETE</code>请求，这种都是要发一个预检请求的，然后服务器允许，才会发送真正的请求。</p><p>非简单请求有以下几个字段需要传递：</p><p>1.<code>Access-Control-Allow-Methods</code>,值是以逗号分隔，比如：<code>GET,POST,DELETE</code>;<br>2.<code>Access-Control-Allow-Headers</code>,值是默认字段或者自定义字段，例如：<code>X-Auth-Info</code>;<br>3.<code>Access-Control-Allow-Credentials</code>,是否携带cookie信息;<br>4.<code>Access-Control-Max-Age</code>，代表预检请求的有效期限，单位是秒。</p><p>例如：以下这个<strong>put</strong>请求,服务端设置一个put请求接口,这里使用axios来请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置返回信息</span></span><br><span class="line"><span class="keyword">const</span> dataUpdate = <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">  title: <span class="string">'update success!'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 设置允许</span></span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>,<span class="string">"POST,PUT"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Allow-Credentials"</span>,<span class="literal">false</span>);</span><br><span class="line">response.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line"><span class="keyword">if</span> (addr.pathname == <span class="string">'/update'</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (request.method == <span class="string">'PUT'</span>) &#123;</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span> &#125;)</span><br><span class="line">    response.write(dataUpdate);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.writeHead(<span class="number">404</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain;charset=utf-8'</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端请求，返回内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/axios/0.19.0/axios.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">saveInfo</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> axios.put(<span class="string">'http://localhost:3000/update'</span>, &#123;</span><br><span class="line">    title: <span class="string">'far'</span>,</span><br><span class="line">    body: <span class="string">'bar'</span>,</span><br><span class="line">    userId: <span class="number">121</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line">saveInfo();</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182402770.png" alt="put" title="">                </div>                <div class="image-caption">put</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182339258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="put" title="">                </div>                <div class="image-caption">put</div>            </figure><h3 id="domain设置"><a href="#domain设置" class="headerlink" title="domain设置"></a>domain设置</h3><p>这种方法只适用于子域不同时候的跨域请求，可以使用<code>document.domain</code>来设置。</p><p>比如：<code>map.domaintest.org</code>子域名指向根域名<code>domaintest.org</code>，可以使用下面的设置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.domain != <span class="string">'domaintest.org'</span>) &#123;</span><br><span class="line">  <span class="built_in">document</span>.domain = <span class="string">'domaintest.org'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">saveInfo</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> httpReq(&#123;</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    url: <span class="string">'http://map.domaintest.org:8089/ky.html'</span>,</span><br><span class="line">    data: <span class="literal">null</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line">saveInfo();</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.domain != <span class="string">'domaintest.org'</span>) &#123;</span><br><span class="line">  <span class="built_in">document</span>.domain = <span class="string">'domaintest.org'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182415562.png" alt="domain" title="">                </div>                <div class="image-caption">domain</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182430129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="domain" title="">                </div>                <div class="image-caption">domain</div>            </figure><p>看情况，使用谷歌请求，不加这段也可以成功请求到子域的页面内容。</p><h3 id="post-Message"><a href="#post-Message" class="headerlink" title="post Message"></a>post Message</h3><p>这个post Message可以安全的实现跨源通信，适用于父页面和子页面或是两个不同页面之间的请求，iframe的情况就适合用这个。</p><p>父页面通过<code>postMessage(&#39;&lt;msg&gt;&#39;,&#39;&lt;url&gt;&#39;)</code>，子页面接收消息，并且返回消息到父页面，父页面监听<code>message</code>事件接收消息。</p><p>例如：<code>http://map.domaintest.org:8089/parent.html</code>发送消息给子页面<code>http://map.domaintest.org:8089/son.html</code>,子页面返回消息。</p><ul><li>父页面的：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>父级页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>发送消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"child"</span> <span class="attr">src</span>=<span class="string">"http://map.domaintest.org:8089/son.html"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"300"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> sendBtn = <span class="built_in">document</span>.querySelector(<span class="string">'#btn'</span>);</span></span><br><span class="line"><span class="javascript">    sendBtn.addEventListener(<span class="string">'click'</span>, sendMsg, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">sendMsg</span> (<span class="params"></span>) </span>&#123;  </span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.frames[<span class="number">0</span>].postMessage(<span class="string">'getMsg'</span>, <span class="string">'http://map.domaintest.org:8089/son.html'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> data = e.data;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'接收到的消息是：'</span>+ data);</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182447996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="parent" title="">                </div>                <div class="image-caption">parent</div>            </figure><ul><li>子页面的：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>子页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>窗口<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另外一个窗口!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;  </span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (e.source != <span class="built_in">window</span>.parent) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.parent.postMessage(<span class="string">'我是来自子页面的消息!'</span>, <span class="string">'*'</span>);</span></span><br><span class="line"><span class="javascript">    &#125;, <span class="literal">false</span>)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20190718182500332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZlZF9ndWFucWk=,size_16,color_FFFFFF,t_70" alt="son" title="">                </div>                <div class="image-caption">son</div>            </figure><h3 id="跨域代理方法补充"><a href="#跨域代理方法补充" class="headerlink" title="跨域代理方法补充"></a>跨域代理方法补充</h3><p>有时候可以使用代理的方式来发送跨域请求，比如axios的跨域代理，nodejs跨域代理，nginx跨域代理。下面介绍常见的几种跨域代理设置方法。</p><ul><li>axios的跨域代理</li></ul><p>创建实例建立代理：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="keyword">var</span> server = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">'https://domain.com/api/'</span>,</span><br><span class="line">  timeout: <span class="number">1000</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>vue中跨域设置</li></ul><p>在<code>config/index.js</code>中设置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  dev: &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    proxyTable: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">          target: <span class="string">'http://10.0.100.7:8081'</span>, <span class="comment">//设置调用接口域名和端口号别忘了加http</span></span><br><span class="line">          changeOrigin: <span class="literal">true</span>,</span><br><span class="line">          pathRewrite:&#123;</span><br><span class="line">            <span class="string">"^/api"</span>:<span class="string">""</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>接口调用时：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.axios.get(<span class="string">'/api/user'</span>,&#123;</span><br><span class="line">    params: &#123;</span><br><span class="line">        userId:<span class="string">'1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>nodejs跨域代理</li></ul><p>按照代理代理包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S http-proxy</span><br></pre></td></tr></table></figure><p>设置跨域</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="keyword">var</span> path=<span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> httpProxy = <span class="built_in">require</span>(<span class="string">'http-proxy'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务端口</span></span><br><span class="line"><span class="keyword">var</span> PORT = <span class="number">8080</span>;</span><br><span class="line"><span class="comment">//接口前缀</span></span><br><span class="line"><span class="keyword">var</span> API_URL=<span class="string">'api'</span>;</span><br><span class="line"><span class="comment">//真正的api地址</span></span><br><span class="line"><span class="keyword">var</span> API_DOMAIN=<span class="string">'http://www.example.com/'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个代理服务器</span></span><br><span class="line"><span class="keyword">var</span> proxy = httpProxy.createProxyServer(&#123;</span><br><span class="line">    target: API_DOMAIN,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//代理出错则返回500</span></span><br><span class="line">proxy.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, req, res</span>)</span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">500</span>, &#123;</span><br><span class="line">      <span class="string">'content-type'</span>: <span class="string">'text/plain'</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.end(<span class="string">'server is error!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//建立一个本地的server</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.parse(request.url).pathname;</span><br><span class="line">    <span class="keyword">var</span> realPath = path.join(<span class="string">"./"</span>, pathname);</span><br><span class="line">    <span class="keyword">var</span> ext = path.extname(realPath);</span><br><span class="line">    ext = ext ? ext.slice(<span class="number">1</span>) : <span class="string">'unknown'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断如果是接口访问，则通过proxy转发</span></span><br><span class="line">    <span class="built_in">console</span>.log(pathname);</span><br><span class="line">    <span class="built_in">console</span>.log(API_URL);</span><br><span class="line">    <span class="keyword">if</span>(pathname.indexOf(API_URL) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(request.url.substring(<span class="number">4</span>,request.url.length));</span><br><span class="line">        request.url=request.url.substring(<span class="number">4</span>,request.url.length)</span><br><span class="line">        proxy.web(request, response);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.listen(PORT);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Server runing at port: "</span> + PORT + <span class="string">"."</span>);</span><br></pre></td></tr></table></figure><ul><li>nginx跨域代理</li></ul><p>设置cors</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  if ($request_method = &apos;OPTIONS&apos;) &#123;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Max-Age&apos; 64800;</span><br><span class="line">    add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;</span><br><span class="line">    add_header &apos;Content-Length&apos; 0;</span><br><span class="line">    return 204;</span><br><span class="line">  &#125;</span><br><span class="line">  if ($request_method = &apos;POST&apos;) &#123;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">  if ($request_method = &apos;GET&apos;) &#123;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;;</span><br><span class="line">    add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者是反向代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80; #监听80端口</span><br><span class="line">  server_name  localhost; # 当前服务的域名</span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://localhost:81;</span><br><span class="line">    proxy_redirect default;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location /apis &#123; #添加访问目录为/apis的代理配置</span><br><span class="line">    rewrite  ^/apis/(.*)$ /$1 break;</span><br><span class="line">    proxy_pass   http://localhost:82;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>跨域的方法就介绍这么多，还有什么不懂的可以给我留言，我的<a href="https://github.com/gitguanqi" target="_blank" rel="noopener">github</a>，获取更多欢迎访问我的<a href="https://guanqi.xyz">个人博客</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;: 在日常的开发过程中,跨域是一个令人头疼的事情,也在跨域的过程中学到了不少知识,也吃了不少跨域的亏,一直没有时间整理这部分的知识点,现在就我脑海中的跨域知识以及结合开发过程中遇到的坎进行一个系统的总结。&lt;/p
      
    
    </summary>
    
      <category term="前端跨域" scheme="https://guanqi.xyz/categories/%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F/"/>
    
    
      <category term="前端跨域" scheme="https://guanqi.xyz/tags/%E5%89%8D%E7%AB%AF%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>Nginx部署vue站点</title>
    <link href="https://guanqi.xyz//note/nginx-deployment-vue/"/>
    <id>https://guanqi.xyz//note/nginx-deployment-vue/</id>
    <published>2019-07-14T13:40:21.000Z</published>
    <updated>2019-07-14T10:42:54.757Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：本篇讲解如何使用nginx配置vue打包后的文件站点。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>linux centos7操作系统</li><li>ssh软件</li><li>nginx</li><li>node环境</li></ul><h2 id="nginx配置vue站点"><a href="#nginx配置vue站点" class="headerlink" title="nginx配置vue站点"></a>nginx配置vue站点</h2><p>新建nginx配置文件，输入以下内容。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/vhost/vue.conf</span><br></pre></td></tr></table></figure><p>在里面输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;  </span><br><span class="line">  listen   8080;  # 监听端口</span><br><span class="line">  server_name  localhost vue.example.org; # 访问域名  </span><br><span class="line">  access_log  /var/www/vue/access.log; # 成功日志</span><br><span class="line">  error_log  /var/www/vue/error.log; # 错误日志</span><br><span class="line">  root /var/www/vue;</span><br><span class="line">  index index.html;</span><br><span class="line">  location / &#123;</span><br><span class="line">   try_files $uri $uri/ @router;</span><br><span class="line">   index index.html;</span><br><span class="line">  &#125;</span><br><span class="line">  location @router &#123;</span><br><span class="line">   rewrite ^.*$ /index.html last;</span><br><span class="line">  &#125;</span><br><span class="line">  error_page 500 502 503 504 /50x.html;</span><br><span class="line">  location = /50x.html &#123;</span><br><span class="line">   root html;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开8080端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>配置完了以后重载重启nginx。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>然后创建一个vue文件，上传文件访问地址，便可以看到输出结果。</p><ul><li>创建目录：<code>mkdir /var/www/vue</code></li><li>上传文件: <code>scp -P 8080 dist/* root@192.168.1.123:/var/www/vue</code></li></ul><h2 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h2><p>scp命令用于Linux系统之间复制文件和目录。scp是 secure copy的缩写。</p><p>-1： 强制scp命令使用协议ssh1<br>-2： 强制scp命令使用协议ssh2<br>-4： 强制scp命令只使用IPv4寻址<br>-6： 强制scp命令只使用IPv6寻址<br>-B： 使用批处理模式（传输过程中不询问传输口令或短语）<br>-C： 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）<br>-p：保留原文件的修改时间，访问时间和访问权限。<br>-q： 不显示传输进度条。<br>-r： 递归复制整个目录。<br>-v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。<br>-c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。<br>-F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。<br>-i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。<br>-l limit： 限定用户所能使用的带宽，以Kbit/s为单位。<br>-o ssh_option： 如果习惯于使用ssh_config(5)中的参数传递方式，<br>-P port：注意是大写的P, port是指定数据传输用到的端口号<br>-S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>在本地<strong>hosts</strong>文件增加解析记录,这里的ip就是你远程服务器的ip地址了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123 vue.example.org</span><br></pre></td></tr></table></figure><p>打开游览器，输入<code>http://vue.example.org</code>或者访问<code>192.168.1.123:8080</code>就可以看到之前编辑的站点的vue文件内容了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：本篇讲解如何使用nginx配置vue打包后的文件站点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备
      
    
    </summary>
    
      <category term="vuejs" scheme="https://guanqi.xyz/categories/vuejs/"/>
    
    
      <category term="nginx" scheme="https://guanqi.xyz/tags/nginx/"/>
    
      <category term="vuejs" scheme="https://guanqi.xyz/tags/vuejs/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统中node安装配置</title>
    <link href="https://guanqi.xyz//note/node-installation-and-configuration-in-centos7-system/"/>
    <id>https://guanqi.xyz//note/node-installation-and-configuration-in-centos7-system/</id>
    <published>2019-07-14T12:40:21.000Z</published>
    <updated>2019-07-14T10:43:11.628Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：本篇讲解如何配置node开发环境，让你的node代码可以正常的在网页中运行。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>linux centos7操作系统</li><li>ssh软件</li><li>nginx</li></ul><h2 id="node资源"><a href="#node资源" class="headerlink" title="node资源"></a>node资源</h2><p>想要了解更多关于node的内容，请访问：</p><ul><li><a href="https://nodejs.org" target="_blank" rel="noopener">nodejs官网</a></li></ul><h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>本次安装介绍两个版本的安装方法，一个是源码安装,另一个是已编译版本安装，</p><ul><li>源码安装</li><li>已编译版本安装</li></ul><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><ul><li>第一步,到官网查看最新源码，并下载</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/downloads</span><br><span class="line">wget https://nodejs.org/dist/v10.16.0/node-v10.16.0.tar.gz</span><br></pre></td></tr></table></figure><ul><li>第二步，解压源码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf node-v10.16.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> node-v10.16.0</span><br></pre></td></tr></table></figure><ul><li>第三步，安装编译软件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install gcc gcc-c++</span><br></pre></td></tr></table></figure><ul><li>第四步，编译安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>大概需要半个小时时间,编译完成查看版本号。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure><p>如果有显示版本号，说明安装成功。</p><h2 id="已编译版本安装"><a href="#已编译版本安装" class="headerlink" title="已编译版本安装"></a>已编译版本安装</h2><ul><li>下载已编译版本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/downloads</span><br><span class="line">wget https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><ul><li>解压</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf node-v10.16.0-linux-x64.tar.xz</span><br><span class="line">mv node-v10.16.0-linux-x64  /home/soft/node10</span><br></pre></td></tr></table></figure><ul><li>建立软连接</li></ul><p>这样就可以全局使用了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /home/soft/node10/bin/npm /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">ln -s /home/soft/node10/bin/node /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure><ul><li>查看版本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="自动化node"><a href="#自动化node" class="headerlink" title="自动化node"></a>自动化node</h2><ul><li>安装pm2管理软件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><ul><li>全局配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /home/soft/node10/bin/pm2 /usr/<span class="built_in">local</span>/bin/pm2</span><br></pre></td></tr></table></figure><ul><li>pm2常用命令</li></ul><p>启动：<code>pm2 start app_name|app_id</code><br>停止：<code>pm2 stop app_name|app_id</code><br>删除：<code>pm2 delete app_name|app_id</code><br>重启：<code>pm2 restart app_name|app_id</code><br>停止所有：<code>pm2 stop all</code><br>查看所有的进程：<code>pm2 list</code><br>查看所有的进程状态：<code>pm2 status</code><br>查看某一个进程的信息：<code>pm2 describe app_name|app_id</code></p><h2 id="nginx配置node环境"><a href="#nginx配置node环境" class="headerlink" title="nginx配置node环境"></a>nginx配置node环境</h2><p>新建nginx配置文件，输入以下内容。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/vhost/node.conf</span><br></pre></td></tr></table></figure><p>在里面输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;  </span><br><span class="line">  listen   80;  # 监听端口</span><br><span class="line">  server_name  node.example.org; # 访问域名  </span><br><span class="line">  access_log  /var/www/node/access.log; # 成功日志</span><br><span class="line">  error_log  /var/www/node/error.log; # 错误日志</span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:3000;</span><br><span class="line">  &#125;</span><br><span class="line">  # 静态文件图片规则</span><br><span class="line">  location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">    expires  30d;</span><br><span class="line">  &#125;</span><br><span class="line">  # 静态文件js、css规则</span><br><span class="line">  location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">    expires  1h;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开3000端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=3000/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>配置完了以后重载重启nginx。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>然后创建一个node文件，访问地址，便可以看到输出结果。</p><ul><li>创建目录：<code>mkdir /var/www/node</code></li><li>创建文件: <code>vi /var/www/node/app.js</code></li></ul><p>输入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存为app.js文件</span></span><br><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> success = &#123;</span><br><span class="line">    msg: <span class="string">"get_succ"</span>,</span><br><span class="line">    code: <span class="number">201</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        list: [</span><br><span class="line">            &#123;<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"name"</span>: <span class="string">"alun"</span>&#125;,</span><br><span class="line">            &#123;<span class="string">"id"</span>:<span class="number">2</span>,<span class="string">"name"</span>: <span class="string">"mark"</span>&#125;,</span><br><span class="line">            &#123;<span class="string">"id"</span>:<span class="number">3</span>,<span class="string">"name"</span>: <span class="string">"jean"</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> error = &#123;</span><br><span class="line">    msg: <span class="string">"get_fail"</span>,</span><br><span class="line">    code: <span class="number">101</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        info: <span class="string">'this request failed,again try!'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> authy = &#123;</span><br><span class="line">    msg: <span class="string">"no visited!"</span>,</span><br><span class="line">    code: <span class="number">403</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        info: <span class="string">'not visited!'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立http服务</span></span><br><span class="line"><span class="keyword">const</span> serve = http.createServer(<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> lawDomainList = <span class="string">"http://localhost:9925"</span>;</span><br><span class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain;charset=utf8'</span>);</span><br><span class="line">    res.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>,lawDomainList);</span><br><span class="line">    <span class="keyword">if</span> (req.url == <span class="string">'/api'</span>) &#123;</span><br><span class="line">        res.end(<span class="built_in">JSON</span>.stringify(success));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.end(<span class="built_in">JSON</span>.stringify(error));</span><br><span class="line">    &#125;</span><br><span class="line">    res.end(authy);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">serve.listen(port,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'serve is running on port 3000!'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>启动node程序，<code>pm2 start app.js</code>。</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>在本地<strong>hosts</strong>文件增加解析记录,这里的ip就是你远程服务器的ip地址了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123 node.example.org</span><br></pre></td></tr></table></figure><p>打开游览器，输入<code>http://node.example.org</code>就可以看到之前编辑的站点的node文件内容了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：本篇讲解如何配置node开发环境，让你的node代码可以正常的在网页中运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="node" scheme="https://guanqi.xyz/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>VSCode常用插件汇总</title>
    <link href="https://guanqi.xyz//note/vscode-most-plugins/"/>
    <id>https://guanqi.xyz//note/vscode-most-plugins/</id>
    <published>2019-07-14T11:30:21.000Z</published>
    <updated>2019-07-14T09:17:58.936Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：这篇博客主要是我使用vscode过程中的插件汇总，使用了这么长时间，总想有个总结，也方便日后查看，这里我将我使用的插件分为<strong>基础</strong>、<strong>框架</strong>、<strong>工具</strong>三个类型。</p></blockquote><h2 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h2><p><a href="https://marketplace.visualstudio.com/vscode" target="_blank" rel="noopener">VSCode插件官网地址</a>，里面有很多的插件可以使用。</p><h2 id="基础插件"><a href="#基础插件" class="headerlink" title="基础插件"></a>基础插件</h2><p>这部分插件主要是和<code>html</code>、<code>css</code>、<code>js</code>有关的。</p><h3 id="html-CSS-Support"><a href="#html-CSS-Support" class="headerlink" title="html CSS Support"></a>html CSS Support</h3><p>这个插件支持以下语言，提供基础的语法知识编写辅助。</p><p>这是<a href="https://marketplace.visualstudio.com/items?itemName=ecmel.vscode-html-css" target="_blank" rel="noopener">插件地址</a></p><ul><li>html</li><li>laravel-blade</li><li>razor</li><li>vue</li><li>pug</li><li>jade</li><li>handlebars</li><li>php</li><li>twig</li><li>md</li><li>nunjucks</li><li>javascript</li><li>javascriptreact</li></ul><h3 id="HTML-Snippets"><a href="#HTML-Snippets" class="headerlink" title="HTML Snippets"></a>HTML Snippets</h3><p>这个插件主要是针对html的语法的，支持以下标签，<a href="https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets" target="_blank" rel="noopener">插件地址</a></p><ul><li>html5的全部标签</li><li>标签含义信息提示</li><li>一些描述性的语法</li></ul><h3 id="HTMLHint"><a href="#HTMLHint" class="headerlink" title="HTMLHint"></a>HTMLHint</h3><p>这个插件提供html的编写提示，包括到属性的格式监测，语法细致监测纠正，非常好的。<a href="https://marketplace.visualstudio.com/items?itemName=mkaufman.HTMLHint" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01pY3Jvc29mdC92c2NvZGUtaHRtbGhpbnQvbWFzdGVyL2h0bWxoaW50L2ltYWdlcy9oZXJvLnBuZw" alt="htmlhint" title="">                </div>                <div class="image-caption">htmlhint</div>            </figure><h3 id="stylelint"><a href="#stylelint" class="headerlink" title="stylelint"></a>stylelint</h3><p>这个插件是有个css，sass,less的语法监测。<a href="https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/shinnn/vscode-stylelint/raw/master/screenshot.png" alt="stylelint" title="">                </div>                <div class="image-caption">stylelint</div>            </figure><h3 id="JavaScript-ES6-code-snippets"><a href="#JavaScript-ES6-code-snippets" class="headerlink" title="JavaScript (ES6) code snippets"></a>JavaScript (ES6) code snippets</h3><p>这个插件就是js方面的内容，主要提供以下支持，<a href="https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets" target="_blank" rel="noopener">插件地址</a></p><ul><li>JavaScript (.js)</li><li>TypeScript (.ts)</li><li>JavaScript React (.jsx)</li><li>TypeScript React (.tsx)</li><li>Html (.html)</li><li>Vue (.vue)</li></ul><h3 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h3><p>这个是有关js的语法监测插件，也很棒。<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener">插件地址</a></p><h3 id="Latest-TypeScript-and-Javascript-Grammar"><a href="#Latest-TypeScript-and-Javascript-Grammar" class="headerlink" title="Latest TypeScript and Javascript Grammar"></a>Latest TypeScript and Javascript Grammar</h3><p>这个插件提供最新的TypeScript和Javascript语法，可以看一下。<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.typescript-javascript-grammar" target="_blank" rel="noopener">插件地址</a></p><ul><li>typescript语法支持</li><li>JavaScript语法支持</li></ul><h3 id="markdownlint"><a href="#markdownlint" class="headerlink" title="markdownlint"></a>markdownlint</h3><p>这个是提供markdown语法监测的插件，非常好用，帮助你养成良好的markdown编写风格。<a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint" target="_blank" rel="noopener">插件地址</a></p><h2 id="框架插件"><a href="#框架插件" class="headerlink" title="框架插件"></a>框架插件</h2><p>这部分插件主要是和各个框架有关的插件，比如jquery,bootstrap,vue等ui框架，html模板引擎和js框架。</p><h3 id="EJS-language-support"><a href="#EJS-language-support" class="headerlink" title="EJS language support"></a>EJS language support</h3><p>这是一个非常好用的html模板引擎插件，提供ejs的用法。</p><p><a href="https://marketplace.visualstudio.com/items?itemName=DigitalBrainstem.javascript-ejs-support" target="_blank" rel="noopener">插件地址</a></p><ul><li>if</li><li>for</li><li>插值</li><li>…</li></ul><h3 id="jQuery-Code-Snippets"><a href="#jQuery-Code-Snippets" class="headerlink" title="jQuery Code Snippets"></a>jQuery Code Snippets</h3><p>虽然jQuery诞生于2006年，距今已有13年历史，但是还是有很多人在使用，所以也推荐一下。<a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.jquerysnippets" target="_blank" rel="noopener">插件地址</a></p><p>提供以下方法：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0RvbkpheWFtYW5uZS9qcXVlcnlzbmlwcGV0cy9tYXN0ZXIvaW1hZ2VzL3NuaXBwZXRzLnBuZw" alt="jQuery Code Snippets" title="">                </div>                <div class="image-caption">jQuery Code Snippets</div>            </figure><ul><li>func</li><li>jqAfter</li><li>jqAjax</li><li>jqAjaxAspNetWebService</li><li>jqAppend</li><li>jqAppendTo</li><li>jqAttrGet</li><li>jqAttrRemove</li><li>jqAttrSet</li><li>jqAttrSetFn</li><li>jqAttrSetObj</li><li>jqBefore</li><li>jqBind</li><li>jqBindWithData</li><li>jqBlur</li><li>jqChange</li><li>…</li></ul><h3 id="vetur"><a href="#vetur" class="headerlink" title="vetur"></a>vetur</h3><p>这个是vuejs官方团队的一名成员写的有关vuejs语法的插件，强力推荐。<a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur" target="_blank" rel="noopener">插件地址</a></p><ul><li>Syntax-highlighting</li><li>Snippet</li><li>Emmet</li><li>Linting / Error Checking</li><li>Formatting</li><li>Auto Completion</li><li>Debugging</li></ul><h3 id="Vue-2-Snippets"><a href="#Vue-2-Snippets" class="headerlink" title="Vue 2 Snippets"></a>Vue 2 Snippets</h3><p>这个也是vue的语法插件，也作为补充插件。<a href="https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2hvbGxvd3RyZWUvdnNjb2RlLXZ1ZS1zbmlwcGV0cy9tYXN0ZXIvaW1nL3Nob3cxLnBuZw" alt="Vue 2 Snippets" title="">                </div>                <div class="image-caption">Vue 2 Snippets</div>            </figure><h2 id="工具插件"><a href="#工具插件" class="headerlink" title="工具插件"></a>工具插件</h2><p>这部分插件主要是日常工作过程中的一些工程化编译，构建还有辅助等工具，辅助编程。</p><h3 id="Auto-Rename-Tag"><a href="#Auto-Rename-Tag" class="headerlink" title="Auto Rename Tag"></a>Auto Rename Tag</h3><p>这是一款有关html标签的工具，具有自动重命名标签的功能，<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/formulahendry/vscode-auto-rename-tag/raw/master/images/usage.gif" alt="Auto Rename Tag" title="">                </div>                <div class="image-caption">Auto Rename Tag</div>            </figure>]<br><br>### Beautify<br><br>这是一款代码格式化的插件，可以对你写的代码进行格式调整，使得代码易读，规整，好看。<a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify" target="_blank" rel="noopener">插件地址</a><br><br>### cssrem<br><br>这是一款有关css的px和rem转换的工具插件，方便移动端网页设计稿开发。<a href="https://marketplace.visualstudio.com/items?itemName=cipchk.cssrem" target="_blank" rel="noopener">插件地址</a><br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/cipchk/vscode-cssrem/raw/master/screenshots/cssrem.gif" alt="cssrem" title="">                </div>                <div class="image-caption">cssrem</div>            </figure>]<br><br>### Document This<br><br>这是一款给js函数方法添加参数注解的插件。<a href="https://marketplace.visualstudio.com/items?itemName=joelday.docthis" target="_blank" rel="noopener">插件地址</a><br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/joelday/vscode-docthis/raw/master/images/demo.gif" alt="Document This" title="">                </div>                <div class="image-caption">Document This</div>            </figure>]<br><br>### filesize<br><br>这是一款计算每个文件大小的插件，方便你对你的代码量进行可视化观察，及时缩小代码量，提供代码质量。<a href="https://marketplace.visualstudio.com/items?itemName=mkxml.vscode-filesize" target="_blank" rel="noopener">插件地址</a><br><br>### JSON Tools<br><br>这是一款有关json数据格式化的插件，可以压缩和解压格式化json代码。<a href="https://marketplace.visualstudio.com/items?itemName=eriklynd.json-tools" target="_blank" rel="noopener">插件地址</a><br><br>+ Ctrl(Cmd)+Alt+M,格式化json数据<br>+ Alt+M，压缩json数据<br><br>### Live Server<br><br>这是一款可以提供http协议服务的插件，可以使用http进行访问本地网页,而且是实时更新内容。<a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer" target="_blank" rel="noopener">插件地址</a><br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/ritwickdey/vscode-live-server/raw/master/images/Screenshot/vscode-live-server-animated-demo.gif" alt="Live Server" title="">                </div>                <div class="image-caption">Live Server</div>            </figure>]<br><br>### Material Icon Theme<br><br>这是一款Material主题风格的图标插件，涵盖了大多数文件对应的图标，非常容易识别确认。<a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme" target="_blank" rel="noopener">插件地址</a><br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/master/images/fileIcons.png" alt="Material Icon Theme" title="">                </div>                <div class="image-caption">Material Icon Theme</div>            </figure>]<br><br>### Minify<br><br>这是一款代码压缩插件，可以对html,css,js代码进行压缩，就像webpack打包工具那样压缩你的代码，使代码体积变小，打开速度加快。<a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.minify" target="_blank" rel="noopener">插件地址</a><br><br>默认是压缩以后，生成一个原来名字后加<code>.</code>的文件，里面是压缩后的代码,比如：<code>example.html</code>压缩后的名字变为<code>example.min.html</code>。<br><br>### npm<br><br>这个插件主要是用来管理npm包的，可以在编辑器内下载，安装，查询，卸载npm包，非常方便。<a href="https://marketplace.visualstudio.com/items?itemName=eg2.vscode-npm-script" target="_blank" rel="noopener">插件地址</a><br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC92c2NvZGUtbnBtLXNjcmlwdHMvcmF3L21hc3Rlci9pbWFnZXMvdmFsaWRhdGlvbi5wbmc" alt="npm" title="">                </div>                <div class="image-caption">npm</div>            </figure><h3 id="open-in-browser"><a href="#open-in-browser" class="headerlink" title="open in browser"></a>open in browser</h3><p>这个插件是在默认游览器打开你的网页，可以预览，但是需要手动刷新内容。<a href="https://marketplace.visualstudio.com/items?itemName=techer.open-in-browser" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTgvMDgvMTIvNWI2ZmI4ZjM3OGU4Yi5qcGc" alt="open in browser" title="">                </div>                <div class="image-caption">open in browser</div>            </figure><h3 id="Path-Intellisense"><a href="#Path-Intellisense" class="headerlink" title="Path Intellisense"></a>Path Intellisense</h3><p>这个插件具有自动补全功能，非常方便。<a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cDovL2kuZ2lwaHkuY29tL2lhSGVVaURlVFVadW8uZ2lm" alt="Path Intellisense" title="">                </div>                <div class="image-caption">Path Intellisense</div>            </figure><h3 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h3><p>这个插件是一个sass编译工具，方便书写sass代码。<a href="https://marketplace.visualstudio.com/items?itemName=robinbentley.sass-indented" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3JvYmluYmVudGxleS92c2NvZGUtc2Fzcy1pbmRlbnRlZC9tYXN0ZXIvaW1hZ2VzL3NjcmVlbnNob3QucG5n" alt="Sass" title="">                </div>                <div class="image-caption">Sass</div>            </figure><h3 id="Sass-Lint"><a href="#Sass-Lint" class="headerlink" title="Sass Lint"></a>Sass Lint</h3><p>这个是和sass配套的一个插件，检查sass语法是否正确，<a href="https://marketplace.visualstudio.com/items?itemName=glen-84.sass-lint" target="_blank" rel="noopener">插件地址</a></p><h3 id="vscode-fileheader"><a href="#vscode-fileheader" class="headerlink" title="vscode-fileheader"></a>vscode-fileheader</h3><p>这个插件可以在文档顶部插入一段说明注释，非常便于你查看当日写了哪些内容，<a href="https://marketplace.visualstudio.com/items?itemName=mikey.vscode-fileheader" target="_blank" rel="noopener">插件地址</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRodWIuY29tL3poYW9wZW5nbWUvdnNjb2RlLWZpbGVoZWFkZXIvcmF3L21hc3Rlci9maWxlaGVhZGVyLmdpZg" alt="vscode-fileheader" title="">                </div>                <div class="image-caption">vscode-fileheader</div>            </figure><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>这个插件是一个webpack的辅助工具，可以创建webpack配置文件的，还有babel编译帮助功能,<a href="https://marketplace.visualstudio.com/items?itemName=jeremyrajan.webpack" target="_blank" rel="noopener">插件地址</a></p><p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cloud.githubusercontent.com/assets/2890683/22660145/7411a69c-ecc6-11e6-8c24-51d24bccb53a.png" alt="webpack" title="">                </div>                <div class="image-caption">webpack</div>            </figure>]</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这就是我日常使用的一些vscode的插件，在此作为一个汇总，方便日后查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：这篇博客主要是我使用vscode过程中的插件汇总，使用了这么长时间，总想有个总结，也方便日后查看，这里我将我使用的插件分为&lt;strong&gt;基础&lt;/strong&gt;、&lt;strong&gt;框架&lt;/strong&gt;、&lt;st
      
    
    </summary>
    
      <category term="前端工具" scheme="https://guanqi.xyz/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="前端工具" scheme="https://guanqi.xyz/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
      <category term="编辑器" scheme="https://guanqi.xyz/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="vscode" scheme="https://guanqi.xyz/tags/vscode/"/>
    
      <category term="plugin" scheme="https://guanqi.xyz/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>linxu服务器配置免费ssl证书</title>
    <link href="https://guanqi.xyz//note/linux-server-configuration-free-ssl-certificate/"/>
    <id>https://guanqi.xyz//note/linux-server-configuration-free-ssl-certificate/</id>
    <published>2019-07-01T10:36:21.000Z</published>
    <updated>2019-07-14T09:35:10.212Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：之前买过一台阿里云服务器，现在想配置一个ssl证书，现在就收集到的资料进行整理归纳，说一下如何配置一个域名ssl证书。</p></blockquote><h2 id="配置环境准备"><a href="#配置环境准备" class="headerlink" title="配置环境准备"></a>配置环境准备</h2><ul><li>一台Linux系统的在线服务器</li><li>一个经过dns解析可以正常访问的http协议的网站</li></ul><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><p>这里主要介绍的是免费ssl证书配置，付费证书请访问以下网站购买。</p><ul><li><a href="https://www.wosign.com" target="_blank" rel="noopener">沃通</a></li><li><a href="https://www.trustasia.com/" target="_blank" rel="noopener">亚洲诚信</a></li></ul><p>以上两个比较权威。</p><p>下面介绍免费配置方法。</p><ul><li>ssl免费证书网</li><li>cert包进行配置</li></ul><h2 id="ssl证书"><a href="#ssl证书" class="headerlink" title="ssl证书"></a>ssl证书</h2><p>ssl证书是类似于驾驶证、护照的数字证书，遵守ssl协议，由信任的CA机构验证服务器身份后颁发，具有服务器身份验证和数据传输加密功能。很多网站都启用了ssl证书，来确保他们的网站避免信息被获取盗用。</p><p>一般来说，ssl证书分为以下三种：</p><ul><li>扩展验证型(EV)SSL证书，迄今为止审核最为严格的证书，不仅验证网站服务器身份，还会通过律师函第三方验证；</li><li>组织验证型(OV)SSL证书，针对网站域名和所有权进行严格的审查，强化企业信任度；</li><li>域名验证型（DV）SSL证书，只验证网站域名所有权的简易型证书，仅能起到网站信息加密的作用，无法验证网站的所有者真实身份。</li></ul><h2 id="ssl免费证书网"><a href="#ssl免费证书网" class="headerlink" title="ssl免费证书网"></a>ssl免费证书网</h2><p>这个网站主要目的还是宣传普及ssl证书，顺便向大众提供免费的基础的ssl申请使用服务。</p><p>申请步骤就是：</p><ul><li>点击进入<a href="https://freessl.cn" target="_blank" rel="noopener">官网</a>,注册账号；</li><li>进入首页选择证书，这里提供品牌证书和收费证书；</li><li>填写你需要的域名，然后点击创建</li><li>这里是具体的申请方法，我就不详细说明了。</li></ul><ol><li><a href="https://blog.freessl.cn/about-freessl-org-apply-cert-introduce/" target="_blank" rel="noopener">申请免费的ssl证书</a>  </li><li><a href="https://blog.freessl.cn/how-do-i-install-an-ssl-certificate-collection/" target="_blank" rel="noopener">安装申请通过的ssl证书</a></li></ol><h2 id="linux安装ssl证书"><a href="#linux安装ssl证书" class="headerlink" title="linux安装ssl证书"></a>linux安装ssl证书</h2><p>这个才是本文重点，主要介绍如何在linux系统的服务器上面免费申请ssl证书，并使用nginx进行配置。</p><h3 id="下载安装certbot"><a href="#下载安装certbot" class="headerlink" title="下载安装certbot"></a>下载安装certbot</h3><p>使用ssh工具登录服务器，然后把安装包下载下来，安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">wget https://github.com/certbot/certbot/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line"><span class="built_in">cd</span> master</span><br><span class="line">./certbot-auto --<span class="built_in">help</span></span><br><span class="line">./certbot-auto certonly --webroot --agree-tos -v -t --email eg@126.com -w /var/www/eg.com/web -d eg.com</span><br></pre></td></tr></table></figure><h3 id="修改nginx配置文件"><a href="#修改nginx配置文件" class="headerlink" title="修改nginx配置文件"></a>修改nginx配置文件</h3><p>进入<code>/etc/nginx/vhost/</code>,然后打开配置文件，<code>eg.conf</code>，把80端口改成重写到https，增加443端口的配置。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/vhost</span><br><span class="line">vi eg.conf</span><br></pre></td></tr></table></figure><p>下面是简单的配置内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen      80;</span><br><span class="line">  server_name eg.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">    rewrite (.*) https://eg.com$1 permanent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name eg.com;</span><br><span class="line">  ssl on;</span><br><span class="line">  root /var/www/eg.com/web;</span><br><span class="line">  index index.html index.php;</span><br><span class="line">  ssl_certificate &quot;/etc/letsencrypt/live/eg.com/fullchain.pem&quot;;</span><br><span class="line">  ssl_certificate_key &quot;/etc/letsencrypt/live/eg.com/privkey.pem&quot;;</span><br><span class="line">  ssl_session_cache shared:SSL:1m;</span><br><span class="line">  ssl_session_timeout  10m;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  location / &#123;</span><br><span class="line">      try_files $uri $uri/ /index.php$is_args$query_string;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php$ &#123;</span><br><span class="line">      try_files $uri =404;</span><br><span class="line">      fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">      fastcgi_index index.php;</span><br><span class="line">      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">      include fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重启nginx即可"><a href="#重启nginx即可" class="headerlink" title="重启nginx即可"></a>重启nginx即可</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p>这时候打开<code>https://eg.com</code>，你就可以看到小锁，说明配置成功!</p><h3 id="证书的更新"><a href="#证书的更新" class="headerlink" title="证书的更新"></a>证书的更新</h3><p>这种证书一般有效期只有三个月，使用到期要续,到期后发邮件，renew即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/certbot-master/certbot-auto renew</span><br></pre></td></tr></table></figure><h2 id="傻瓜配置安装ssl证书"><a href="#傻瓜配置安装ssl证书" class="headerlink" title="傻瓜配置安装ssl证书"></a>傻瓜配置安装ssl证书</h2><p>这种方法下载一个yum包，一键即可配置成功，不需要写配置文件，不需要敲命令和输入邮箱域名名称等信息。</p><h3 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python2-certbot-nginx</span><br></pre></td></tr></table></figure><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure><p>下面会出现几个选项，选择你要配置的域名序号，然后再输入是否自动配置，然后重启nginx就可以了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="续期"><a href="#续期" class="headerlink" title="续期"></a>续期</h3><p>执行以下命令便可续期</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>本篇所讲ssl证书配置只是为了开发测试使用，如果是开展正常商务活动和电商交易以及其他企业贸易活动，请配置正规的付费的证书，会比较好。</p><p>有什么不懂的可以留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：之前买过一台阿里云服务器，现在想配置一个ssl证书，现在就收集到的资料进行整理归纳，说一下如何配置一个域名ssl证书。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;配置环境准备&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="ssl" scheme="https://guanqi.xyz/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>在linux中使用vim</title>
    <link href="https://guanqi.xyz//note/use-vim-in-linux/"/>
    <id>https://guanqi.xyz//note/use-vim-in-linux/</id>
    <published>2019-06-01T01:36:21.000Z</published>
    <updated>2019-07-14T07:02:48.700Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>:vim是Linux系统中的一个文本编辑器，类似于vscode，记事本等编辑器；是从vi发展继承过来的，是一款广受Linux程序员欢迎的工具。今天，我就一探究竟，揭开vim的神秘面纱。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>环境准备</li><li>安装vim</li><li>常用语法</li><li>实战演练</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>centos7</li><li>可以联网</li><li>putty或xshell</li></ul><h2 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h2><p>要想富，先修路，要想使用<code>vim</code>，先安装包，这是 <strong><a href="https://www.vim.org/" target="_blank" rel="noopener">vim官网</a></strong>。</p><p>开始安装vim：</p><ul><li>检查本机是否安装好vim</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep vim //查看vim命令的软件包</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/vim01.jpg" alt="检测vim" title="">                </div>                <div class="image-caption">检测vim</div>            </figure><ul><li>安装相关软件包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  install -y vim*</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/vim02.jpg" alt="查看vim" title="">                </div>                <div class="image-caption">查看vim</div>            </figure><h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><p>下面这幅图片是一个经典的vim命令图。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/vim03.jpg" alt="vim命令图" title="">                </div>                <div class="image-caption">vim命令图</div>            </figure><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>vim有三种模式：</p><ul><li>命令模式，就是使用vim启动一个文件；可以按下<code>i/a/o</code>进入输入模式。</li><li>输入模式，就是可以编辑文件内容，可以<code>Esc</code>退出输入模式到命令模式。</li><li>底线命令模式，就是按下冒号(英文)<code>:</code>进入底线命令模式。</li></ul><h3 id="命令大全"><a href="#命令大全" class="headerlink" title="命令大全"></a>命令大全</h3><p>下面是常用的一些命令：包括<strong>光标移动、复制、粘贴和搜索、替换、切换模式等</strong>命令。</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:left">类型</th><th style="text-align:left">方法</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left">移动光标</td><td style="text-align:left">h 或 向左箭头键(←)</td><td style="text-align:left">光标向左移动一个字符</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left">移动光标</td><td style="text-align:left">j 或 向下箭头键(↓)</td><td style="text-align:left">光标向下移动一个字符</td></tr><tr><td style="text-align:center">3</td><td style="text-align:left">移动光标</td><td style="text-align:left">k 或 向上箭头键(↑)</td><td style="text-align:left">光标向上移动一个字符</td></tr><tr><td style="text-align:center">4</td><td style="text-align:left">移动光标</td><td style="text-align:left">l 或 向右箭头键(→)</td><td style="text-align:left">光标向右移动一个字符</td></tr><tr><td style="text-align:center">5</td><td style="text-align:left">移动光标</td><td style="text-align:left">[Ctrl] + [f]</td><td style="text-align:left">屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td style="text-align:center">6</td><td style="text-align:left">移动光标</td><td style="text-align:left">[Ctrl] + [b]</td><td style="text-align:left">屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td style="text-align:center">7</td><td style="text-align:left">移动光标</td><td style="text-align:left">[Ctrl] + [d]</td><td style="text-align:left">屏幕『向下』移动半页</td></tr><tr><td style="text-align:center">8</td><td style="text-align:left">移动光标</td><td style="text-align:left">[Ctrl] + [u]</td><td style="text-align:left">屏幕『向上』移动半页</td></tr><tr><td style="text-align:center">9</td><td style="text-align:left">移动光标</td><td style="text-align:left">+</td><td style="text-align:left">光标移动到非空格符的下一行</td></tr><tr><td style="text-align:center">10</td><td style="text-align:left">移动光标</td><td style="text-align:left">-</td><td style="text-align:left">光标移动到非空格符的上一行</td></tr><tr><td style="text-align:center">11</td><td style="text-align:left">移动光标</td><td style="text-align:left"><code>n&lt;space&gt;</code></td><td style="text-align:left">那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 <code>20&lt;space&gt;</code> 则光标会向后面移动 20 个字符距离。</td></tr><tr><td style="text-align:center">12</td><td style="text-align:left">移动光标</td><td style="text-align:left">0 或功能键[Home]</td><td style="text-align:left">这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td style="text-align:center">13</td><td style="text-align:left">移动光标</td><td style="text-align:left">$ 或功能键[End]</td><td style="text-align:left">移动到这一行的最后面字符处(常用)</td></tr><tr><td style="text-align:center">14</td><td style="text-align:left">移动光标</td><td style="text-align:left">H</td><td style="text-align:left">光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td style="text-align:center">15</td><td style="text-align:left">移动光标</td><td style="text-align:left">M</td><td style="text-align:left">光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td style="text-align:center">16</td><td style="text-align:left">移动光标</td><td style="text-align:left">L</td><td style="text-align:left">光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td style="text-align:center">17</td><td style="text-align:left">移动光标</td><td style="text-align:left">G</td><td style="text-align:left">移动到这个档案的最后一行(常用)</td></tr><tr><td style="text-align:center">18</td><td style="text-align:left">移动光标</td><td style="text-align:left">nG</td><td style="text-align:left">n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td style="text-align:center">19</td><td style="text-align:left">移动光标</td><td style="text-align:left">gg</td><td style="text-align:left">移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td style="text-align:center">20</td><td style="text-align:left">移动光标</td><td style="text-align:left">n<code>&lt;Enter&gt;</code></td><td style="text-align:left">n 为数字。光标向下移动 n 行(常用)</td></tr><tr><td style="text-align:center">21</td><td style="text-align:left">搜索替换</td><td style="text-align:left">/word</td><td style="text-align:left">向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td></tr><tr><td style="text-align:center">22</td><td style="text-align:left">搜索替换</td><td style="text-align:left">?word</td><td style="text-align:left">向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td style="text-align:center">23</td><td style="text-align:left">搜索替换</td><td style="text-align:left">n</td><td style="text-align:left">这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td style="text-align:center">24</td><td style="text-align:left">搜索替换</td><td style="text-align:left">N</td><td style="text-align:left">这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr><tr><td style="text-align:center">25</td><td style="text-align:left">搜索替换</td><td style="text-align:left"><code>:n1,n2s/word1/word2/g</code></td><td style="text-align:left">n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则：<code>『:100,200s/vbird/VBIRD/g』</code>。(常用)</td></tr><tr><td style="text-align:center">26</td><td style="text-align:left">搜索替换</td><td style="text-align:left"><code>:1,$s/word1/word2/g</code> 或 <code>:%s/word1/word2/g</code></td><td style="text-align:left">从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td style="text-align:center">27</td><td style="text-align:left">搜索替换</td><td style="text-align:left"><code>:1,$s/word1/word2/gc</code> 或 <code>:%s/word1/word2/gc</code></td><td style="text-align:left">从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr><tr><td style="text-align:center">28</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">x, X</td><td style="text-align:left">在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td style="text-align:center">29</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">nx</td><td style="text-align:left">n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td style="text-align:center">30</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">dd</td><td style="text-align:left">删除游标所在的那一整行(常用)</td></tr><tr><td style="text-align:center">31</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">ndd</td><td style="text-align:left">n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td style="text-align:center">32</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">d1G</td><td style="text-align:left">删除光标所在到第一行的所有数据</td></tr><tr><td style="text-align:center">33</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">dG</td><td style="text-align:left">删除光标所在到最后一行的所有数据</td></tr><tr><td style="text-align:center">34</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">d$</td><td style="text-align:left">删除游标所在处，到该行的最后一个字符</td></tr><tr><td style="text-align:center">35</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">d0</td><td style="text-align:left">那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td style="text-align:center">36</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">yy</td><td style="text-align:left">复制游标所在的那一行(常用)</td></tr><tr><td style="text-align:center">37</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">nyy</td><td style="text-align:left">n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td style="text-align:center">38</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">y1G</td><td style="text-align:left">复制游标所在行到第一行的所有数据</td></tr><tr><td style="text-align:center">39</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">yG</td><td style="text-align:left">复制游标所在行到最后一行的所有数据</td></tr><tr><td style="text-align:center">40</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">y0</td><td style="text-align:left">复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td style="text-align:center">41</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">y$</td><td style="text-align:left">复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td style="text-align:center">42</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">p, P</td><td style="text-align:left">p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td style="text-align:center">43</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">J</td><td style="text-align:left">将光标所在行与下一行的数据结合成同一行</td></tr><tr><td style="text-align:center">44</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">c</td><td style="text-align:left">重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td style="text-align:center">45</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">u</td><td style="text-align:left">复原前一个动作。(常用)</td></tr><tr><td style="text-align:center">46</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">[Ctrl]+r</td><td style="text-align:left">重做上一个动作。(常用)</td></tr><tr><td style="text-align:center">47</td><td style="text-align:left">删除、复制与粘贴</td><td style="text-align:left">.</td><td style="text-align:left">不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr><tr><td style="text-align:center">48</td><td style="text-align:left">切换模式</td><td style="text-align:left">i, I</td><td style="text-align:left">进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td></tr><tr><td style="text-align:center">49</td><td style="text-align:left">切换模式</td><td style="text-align:left">a, A</td><td style="text-align:left">进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td style="text-align:center">50</td><td style="text-align:left">切换模式</td><td style="text-align:left">o, O</td><td style="text-align:left">进入输入模式(Insert mode)：这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』； O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td style="text-align:center">51</td><td style="text-align:left">切换模式</td><td style="text-align:left">r, R</td><td style="text-align:left">进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td style="text-align:center">52</td><td style="text-align:left">切换模式</td><td style="text-align:left"><code>[Esc]</code></td><td style="text-align:left">退出编辑模式，回到一般模式中(常用)</td></tr><tr><td style="text-align:center">53</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:w</code></td><td style="text-align:left">将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td style="text-align:center">54</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:w!</code></td><td style="text-align:left">若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td style="text-align:center">55</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:q</code></td><td style="text-align:left">离开 vi (常用)</td></tr><tr><td style="text-align:center">56</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:q!</code></td><td style="text-align:left">若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td style="text-align:center">57</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:wq</code></td><td style="text-align:left">储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td style="text-align:center">58</td><td style="text-align:left">储存、离开</td><td style="text-align:left">ZZ</td><td style="text-align:left">这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！</td></tr><tr><td style="text-align:center">59</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:w [filename]</code></td><td style="text-align:left">将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td style="text-align:center">60</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:r [filename]</code></td><td style="text-align:left">在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td style="text-align:center">61</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:n1,n2 w [filename]</code></td><td style="text-align:left">将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td style="text-align:center">62</td><td style="text-align:left">储存、离开</td><td style="text-align:left"><code>:! command</code></td><td style="text-align:left">暂时离开 vi 到指令行模式下执行 command 的显示结果！例如<code>『:! ls /home』</code>即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td style="text-align:center">63</td><td style="text-align:left">环境变更</td><td style="text-align:left"><code>:set nu</code></td><td style="text-align:left">显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td style="text-align:center">64</td><td style="text-align:left">环境变更</td><td style="text-align:left"><code>:set nonu</code></td><td style="text-align:left">与 set nu 相反，为取消行号！</td></tr></tbody></table><p><em>注意</em>:数字通常代表重复做几次的意，也有代表去到第几个的意思。</p><h2 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h2><p>学以致用，经过上面的学习，应该或多或少对这个vim工具的命令使用有了了解，下面就是实战演练。</p><p>现在，我创建一个名为<code>gqxyz</code>的文本文件，并且切换模式输入内容，然后保存退出。</p><h3 id="进入创建文件"><a href="#进入创建文件" class="headerlink" title="进入创建文件"></a>进入创建文件</h3><p>打开putty或者xshell，在命令行输入<code>vim gqxyz.txt</code>，便创建并且进入了文件，输入<code>i</code>进入编辑模式。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/vim04.jpg" alt="创建进入vim" title="">                </div>                <div class="image-caption">创建进入vim</div>            </figure><h3 id="输入内容"><a href="#输入内容" class="headerlink" title="输入内容"></a>输入内容</h3><p>按下<code>Insert</code>插入内容。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/vim05.jpg" alt="编辑保存vim" title="">                </div>                <div class="image-caption">编辑保存vim</div>            </figure><h3 id="保存内容"><a href="#保存内容" class="headerlink" title="保存内容"></a>保存内容</h3><p>按下<code>Esc</code>，输入冒号<code>:</code>，输入<code>wq</code>，保存编辑内容并且退出。</p><p>vim的学习就到这里了，以上的内容要勤加练习，方能成功掌握vim工具的使用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;:vim是Linux系统中的一个文本编辑器，类似于vscode，记事本等编辑器；是从vi发展继承过来的，是一款广受Linux程序员欢迎的工具。今天，我就一探究竟，揭开vim的神秘面纱。&lt;/p&gt;
&lt;/blockq
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="vim" scheme="https://guanqi.xyz/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础教程之组件开发</title>
    <link href="https://guanqi.xyz//note/vue-basic-tutorial-components/"/>
    <id>https://guanqi.xyz//note/vue-basic-tutorial-components/</id>
    <published>2019-05-30T13:54:21.000Z</published>
    <updated>2019-07-14T07:00:39.817Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：今天给大家讲解vue的组件化开发知识，本文参考<a href="https://cn.vuejs.org" target="_blank" rel="noopener">vue</a>的部分文档知识。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>组件命名</li><li>全局组件</li><li>局部组件</li><li>父子组件通信</li></ul><h2 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h2><p>每一个组件都代表不同的含义，有着不同的功能，比如说注册组件就是专门用来做用户注册时候使用的，分页组件就是专门用作表格列表分页使用。所以不同功能的组件都有不同的名字，组件的命名一般有以下两个方法。</p><h3 id="短横线命名法"><a href="#短横线命名法" class="headerlink" title="短横线命名法"></a>短横线命名法</h3><p>kebab-case，这是官方推荐的方法，也就是两个单词之间使用短横线连接起来。</p><p>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'my-page'</span>, &#123; <span class="comment">/*...*/</span> &#125;)</span><br></pre></td></tr></table></figure><h3 id="小驼峰命名法"><a href="#小驼峰命名法" class="headerlink" title="小驼峰命名法"></a>小驼峰命名法</h3><p>PascalCase，顾名思义，就是首字母大小，但是直接在DOM(非字符串的模板中)使用时只有短横线命名法的组件是有效的。</p><p>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'MyPage'</span>, &#123; <span class="comment">/*...*/</span> &#125;)</span><br></pre></td></tr></table></figure><h2 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h2><p>全局注册的组件在任何vue实例的模板中都可以使用，在子组件也是这样。</p><p>例如：我这里创建一个全局组件<code>component-a</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'my-page'</span>, &#123; <span class="comment">/*...*/</span> &#125;)</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在html模板中就可以使用了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-page</span>&gt;</span><span class="tag">&lt;/<span class="name">my-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h2><p>局部注册，就是只能在一个Vue实例中使用，不能在其他Vue实例中使用。</p><p>例如：js创建一个局部注册组件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyPage = &#123; <span class="comment">/**/</span> &#125;</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">'my-page'</span>: MyPage,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在html模板中就可以使用了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-page</span>&gt;</span><span class="tag">&lt;/<span class="name">my-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以非常灵活，不会增加无谓的消耗增加js。</p><h2 id="父子组件通信"><a href="#父子组件通信" class="headerlink" title="父子组件通信"></a>父子组件通信</h2><p>当我们注册好了组件后，就要学会进行父子组件通信，传递消息。</p><ul><li>首先，我们先创建一个子组件<code>my-post</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyPost = Vue.component(<span class="string">'my-post'</span>, &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    post: <span class="built_in">Object</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class="post"&gt;</span></span><br><span class="line"><span class="string">     &lt;h2 class="post-title"&gt;&#123;&#123; post.title &#125;&#125;&lt;/h2&gt;</span></span><br><span class="line"><span class="string">     &lt;p class="post-content"&gt;&#123;&#123; post.content &#125;&#125;&lt;/p&gt;</span></span><br><span class="line"><span class="string">     &lt;a class="post-link" href="#"&gt;&#123;&#123; post.link &#125;&#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>接着注册到Vue实例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    post: &#123;</span><br><span class="line">      title: <span class="string">'文章标题'</span>,</span><br><span class="line">      content: <span class="string">'文章内容'</span>,</span><br><span class="line">      link: <span class="string">'#1'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">'my-post'</span>: MyPost,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>最后在模板里面使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-post</span> <span class="attr">:post</span>=<span class="string">"post"</span>&gt;</span><span class="tag">&lt;/<span class="name">my-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>Vue组件的一些常用知识就介绍到这里，下次再会。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：今天给大家讲解vue的组件化开发知识，本文参考&lt;a href=&quot;https://cn.vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vue&lt;/a&gt;的部分文档知识。&lt;/p&gt;
      
    
    </summary>
    
      <category term="vuejs" scheme="https://guanqi.xyz/categories/vuejs/"/>
    
    
      <category term="vuejs" scheme="https://guanqi.xyz/tags/vuejs/"/>
    
      <category term="vue基础" scheme="https://guanqi.xyz/tags/vue%E5%9F%BA%E7%A1%80/"/>
    
      <category term="组件" scheme="https://guanqi.xyz/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统配置gitlab</title>
    <link href="https://guanqi.xyz//note/centos7-system-configuration-gitlab/"/>
    <id>https://guanqi.xyz//note/centos7-system-configuration-gitlab/</id>
    <published>2019-05-08T12:55:21.000Z</published>
    <updated>2019-07-14T08:43:36.427Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：今天介绍的是如何在Linux CentOS7系统中配置<em>gitlab</em>。记得我在工作过程中使用过别的公司搭建的内部代码平台，也是用的gitlab，所以我既然学了这个linux，自然要学会配置搭建一个gitlab平台，这是一件非常有意义的事情。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>环境准备</li><li>安装步骤</li><li>基本设置</li><li>网站预览</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>linux centos7系统</li><li>ssh软件</li><li>nginx服务器</li><li>mysql数据库</li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p><a href="https://about.gitlab.com/install/" target="_blank" rel="noopener">gitlab官网安装</a></p><p>安装前，请使用xshell连接远程服务器。</p><p>这次使用<code>yum</code>进行下载安装。</p><p>进入下载文件夹。</p><p>这里是你存放下载包的地方。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/downloads</span><br></pre></td></tr></table></figure><ul><li>第一步：安装依赖</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">sudo systemctl start sshd</span><br><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure><p>如果你想支持邮件发送，请安装以下包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure><ul><li>第二步：安装gitlab包，ee是商业版，需付费；ce是社区版免费。</li></ul><p>这里主要是体验，所以安装社区版即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span><br><span class="line">sudo yum install -y gitlab-ce</span><br></pre></td></tr></table></figure><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><ul><li>首先，修改默认url。</li></ul><p>找到<code>external_url</code>修改为你需要的地址，我这里是<code>git.example.com</code>。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/gitlab/gitlab.rb</span><br><span class="line">external_url <span class="string">'git.example.com'</span></span><br></pre></td></tr></table></figure><ul><li>其次，重新启动。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h2 id="网站预览"><a href="#网站预览" class="headerlink" title="网站预览"></a>网站预览</h2><p>在本地<code>hosts</code>文件中加入一条dns记录。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123  git.example.com;</span><br></pre></td></tr></table></figure><p>接下来在游览器输入<code>git.example.com</code>,就可以访问了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/gitlab01.jpg" alt="我的gitlab" title="">                </div>                <div class="image-caption">我的gitlab</div>            </figure><p>这是我写的一个demo仓库，并且上传至我搭建的gitlab平台。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/gitlab02.jpg" alt="我的gitlab" title="">                </div>                <div class="image-caption">我的gitlab</div>            </figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>非常激动人心的一刻，操练起来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：今天介绍的是如何在Linux CentOS7系统中配置&lt;em&gt;gitlab&lt;/em&gt;。记得我在工作过程中使用过别的公司搭建的内部代码平台，也是用的gitlab，所以我既然学了这个linux，自然要学会配置搭建
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="gitlab" scheme="https://guanqi.xyz/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Node发布命令</title>
    <link href="https://guanqi.xyz//note/npm-release-command/"/>
    <id>https://guanqi.xyz//note/npm-release-command/</id>
    <published>2019-05-01T14:27:21.000Z</published>
    <updated>2019-07-14T08:39:35.500Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：之前说的是如何下载、更新、卸载npm包，今天说一下如何发布自己的npm包到npm的平台上，让别人可以作为项目的依赖包来下载安装和使用。本次使用一个<a href="https://guanqi.xyz/demo/cases/drag/?from=demo">拖拽的案例</a>来演示如何操作。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>初始化npm</li><li>登录npm</li><li>发布包</li><li>更新包</li><li>删除包</li></ul><h2 id="初始化npm包"><a href="#初始化npm包" class="headerlink" title="初始化npm包"></a>初始化npm包</h2><p>在初始化之前一定要安装node环境，然后到<a href="https://www.npmjs.com" target="_blank" rel="noopener">npm官网</a>查看包名是否存在，如果存在则换一个。这次我使用<code>g-drag</code>来作为本次包名，你也在本地写一个通用的方法作为一个单独的包。</p><h3 id="开始初始化"><a href="#开始初始化" class="headerlink" title="开始初始化"></a>开始初始化</h3><p><code>npm init</code> 会生成一个packagejson的文件，项目的配置信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "name": "g-drag", //包名</span><br><span class="line">  "version": "1.0.0", //版本号</span><br><span class="line">  "description": "this is a grag elem package!", //描述</span><br><span class="line">  "main": "src/index.js", //入口文件</span><br><span class="line">  "directories": &#123;</span><br><span class="line">    "example": "example"</span><br><span class="line">  &#125;,</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "keywords": [</span><br><span class="line">    <span class="string">"grag"</span></span><br><span class="line">  ],</span><br><span class="line">  "author": "gitguanqi",</span><br><span class="line">  "license": "ISC"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里初始化就完成了。</p><h2 id="登录npm"><a href="#登录npm" class="headerlink" title="登录npm"></a>登录npm</h2><p>接着就是到官网注册一个账号登录。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><p>输入用户名和密码，即可登录成功。一定要设置为国外的npm源，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><p>这样就登录了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Username: XXX</span><br><span class="line">npm WARN Name may not contain non-url-safe chars</span><br><span class="line">Username: (XXX) XXX</span><br><span class="line">Password: XXX</span><br><span class="line">Email: (this IS public) XXX</span><br><span class="line">Logged <span class="keyword">in</span> as XXX on https://registry.npmjs.org/.</span><br></pre></td></tr></table></figure><h2 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h2><p>接着我们发布自己的包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br><span class="line">npm notice</span><br><span class="line">npm notice package: g-drag@1.0.0</span><br><span class="line">npm notice === Tarball Contents ===</span><br><span class="line">npm notice 324B  package.json</span><br><span class="line">npm notice 1.4kB src/index.js</span><br><span class="line">npm notice === Tarball Details ===</span><br><span class="line">npm notice name:          g-drag</span><br><span class="line">npm notice version:       1.0.0</span><br><span class="line">npm notice package size:  757 B</span><br><span class="line">npm notice unpacked size: 1.7 kB</span><br><span class="line">npm notice shasum:        3f1b5ca4746b4be1fd42285fbf62d9683a7757bc</span><br><span class="line">npm notice integrity:     sha512-ClYLLs51O7jSw[...]6tjR0e+5c16aw==</span><br><span class="line">npm notice total files:   2</span><br><span class="line">npm notice</span><br><span class="line">+ g-drag@1.0.0</span><br></pre></td></tr></table></figure><p>到这里就发布完成。</p><p>可以运行<code>npm view &lt;包名&gt; version</code>查看包信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view g-drag version</span><br></pre></td></tr></table></figure><p>可以试着运行<code>npm install g-drag --save</code>安装依赖了。</p><h2 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h2><p>更新包分为三个版本。</p><ul><li><p>第一个版本是补丁修复，可以使用<code>npm version patch</code>,例如从0.0.1到0.0.2；</p></li><li><p>第二个版本是新功能，可以使用<code>npm version minor</code>,例如从0.2.1到0.4.2；</p></li><li><p>第三个版本是重大更新，可以使用<code>npm version major</code>,例如从1.2.1到2.4.2；</p></li></ul><h2 id="删除包"><a href="#删除包" class="headerlink" title="删除包"></a>删除包</h2><p>可以使用<code>npm unpublish &lt;包名&gt; –force</code>,或者<code>npm deprecate &lt;包名&gt;</code></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>心动不如行动，快练习一下巩固知识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：之前说的是如何下载、更新、卸载npm包，今天说一下如何发布自己的npm包到npm的平台上，让别人可以作为项目的依赖包来下载安装和使用。本次使用一个&lt;a href=&quot;https://guanqi.xyz/dem
      
    
    </summary>
    
      <category term="nodejs" scheme="https://guanqi.xyz/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="https://guanqi.xyz/tags/nodejs/"/>
    
      <category term="node命令" scheme="https://guanqi.xyz/tags/node%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>react学习总结</title>
    <link href="https://guanqi.xyz//note/learning-react-tutorial/"/>
    <id>https://guanqi.xyz//note/learning-react-tutorial/</id>
    <published>2019-04-19T06:16:21.000Z</published>
    <updated>2019-07-14T09:00:43.068Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：最近react非常火，所以我就简单跟着学了几个简单的知识点，在这里做一个学习总结。<strong>网址收藏</strong>：<a href="https://reactjs.org/" target="_blank" rel="noopener">React官网</a>，<a href="https://github.com/facebook/react/" target="_blank" rel="noopener">React的Github</a>，<a href="https://react.docschina.org/" target="_blank" rel="noopener">React的中文文档</a></p></blockquote><h2 id="react是什么"><a href="#react是什么" class="headerlink" title="react是什么"></a>react是什么</h2><p><strong>React</strong>起源于Facebook的内部项目，因为该公司对市场上所有的Javascript MVC框架都不满意，决定自己写一套，用来架设Instargm的网站。做完以后，发现很好用，就在2013年5月开源。</p><h2 id="安装react"><a href="#安装react" class="headerlink" title="安装react"></a>安装react</h2><ul><li>全局安装react脚手架工具<code>npm install create-react-app -g</code></li><li>安装阮一峰老师的教程 <code>git clone git@github.com:ruanyf/react-demos.git</code>下载下来</li></ul><h2 id="react特性"><a href="#react特性" class="headerlink" title="react特性"></a>react特性</h2><p><strong>重点</strong>：组件，状态<br><strong>核心</strong>： 状态</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="html模板"><a href="#html模板" class="headerlink" title="html模板"></a>html模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这是核心js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这是处理虚拟dom相关的js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这是把JSX语法转换为js语法 （注意：JSX就是可以把html写在js里面。） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里加type就是告诉游览器，这里使用的是JSX语法模板。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="comment">//这里写</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ReactDOM-render"><a href="#ReactDOM-render" class="headerlink" title="ReactDOM.render()"></a>ReactDOM.render()</h3><blockquote><p>React最基本的方法，用于把模板转换成html语言，并且插入指定的节点。</p></blockquote><p><em>例如</em>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">    &lt;h2&gt;Welcome to React World!<span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span>,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'myapp'</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="JSX语法"><a href="#JSX语法" class="headerlink" title="JSX语法"></a>JSX语法</h3><blockquote><p>JSX是可以在js中写html，遇到html标签（例如：<code>&lt;</code>）就用<code>html</code>解析，遇到代码块（例如：<code>{</code>）就用javascript规则解析。</p></blockquote><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> names = [<span class="string">'Alice'</span>, <span class="string">'Emily'</span>, <span class="string">'Kate'</span>];</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> foods = [<span class="string">'meal'</span>,<span class="string">'sala'</span>,<span class="string">'milk'</span>];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">          names.map(<span class="function"><span class="keyword">function</span> (<span class="params">name, index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span>Hello, &#123;name&#125;!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'example'</span>)</span></span><br><span class="line"><span class="undefined">      );</span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">          foods.map(<span class="function"><span class="keyword">function</span> (<span class="params">food, index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span>I like eat &#123;food&#125;!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">          &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'food'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件-React-createClass"><a href="#组件-React-createClass" class="headerlink" title="组件 React.createClass()"></a>组件 React.createClass()</h3><blockquote><p>React允许将代码封装成组件(component)，然后把它当成html标签插入到网页中。React.createClass()就是可以创建一个组建类。</p></blockquote><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> LikeFood = React.createClass(&#123;  <span class="comment">//创建组件类</span></span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I like eat <span class="tag">&lt;<span class="name">mark</span>&gt;</span>&#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">LikeFood</span> <span class="attr">name</span>=<span class="string">"Apple"</span>/&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="this-props-children"><a href="#this-props-children" class="headerlink" title="this.props.children"></a>this.props.children</h3><blockquote><p><code>this.props</code>对象的属性与组件的属性基本上是一致的，特殊在于<code>this.props.children</code>属性，它表示组件的所有子节点。</p></blockquote><p><strong>注意：</strong> <code>this.props.children</code>有三个可能，如果当前组件没有子节点，就是显示<code>undefined</code>;如果有一个子节点，数据类型就是<code>object</code>；如果有多个子节点，就是<code>array</code>，所以要小心。<br>但React提供了一个方法遍历所有子节点，<code>React.Children</code>,通过<code>this.props.children</code>来遍历。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> FoodList = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">            render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="javascript">                    React.Children.map(<span class="keyword">this</span>.props.children,<span class="function"><span class="keyword">function</span> (<span class="params">child</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;child&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span>;</span></span><br><span class="line"><span class="undefined">                    &#125;)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="undefined">            )</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        ReactDOM.render(</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">FoodList</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Hello,<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>I like eat<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Apple!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">FoodList</span>&gt;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">        )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PropTypes"><a href="#PropTypes" class="headerlink" title="PropTypes"></a>PropTypes</h3><blockquote><p>组件的属性可以接受任何值，如字符串，数字，数组，对象，函数，但是需要一种机制来验证使用组件提供的参数是否符合要求，PropTypes就是用来验证这个的。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> str = <span class="number">123</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> MyNum = React.createClass(&#123;</span></span><br><span class="line"><span class="undefined">        propTypes: &#123;</span></span><br><span class="line"><span class="undefined">          num: React.PropTypes.number.isRequired,</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;this.props.num&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">MyNum</span> <span class="attr">num</span>=<span class="string">&#123;str&#125;</span> /&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>补充：</strong> 还可以添加默认值。’</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">getDefaultProps: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    num: <span class="number">1818</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> str;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> MyNum = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">        getDefaultProps: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">                num: 1818</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        propTypes: &#123;</span></span><br><span class="line"><span class="undefined">          num: React.PropTypes.number.isRequired,</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;this.props.num&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">MyNum</span> <span class="attr">num</span>=<span class="string">&#123;str&#125;</span> /&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取真实的DOM节点"><a href="#获取真实的DOM节点" class="headerlink" title="获取真实的DOM节点"></a>获取真实的DOM节点</h3><blockquote><p>组件并不是真的dom节点，只是存在内存中的数据结构，叫做虚拟DOM(virtual)。当它插入到文档以后，才会变成真实的DOM。</p></blockquote><p>所有的DOM变动，先是在虚拟DOM上发生变动，然后再在实际发生变动的部分，反映在真实的DOM，这种叫做DOM diff,它可以极大提高网页的性能表现。</p><p>有时需要从组件获取真实的DOM的节点，这个时候就要用到<code>ref</code>属性。</p><p><strong>注意：</strong> React还支持许多事件，更多请访问<a href="http://facebook.github.io/react/docs/events.html#supported-events" target="_blank" rel="noopener">事件</a>。</p><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> MyFoods = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">          showContent: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.refs.myFoodInput.focus();</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="javascript">          render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ref</span>=<span class="string">"myFoodInput"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"自动聚焦"</span> <span class="attr">onClick</span>=<span class="string">&#123;this.showContent&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">            )</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        ReactDOM.render(</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">MyFoods</span> /&gt;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">        )</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="this-state"><a href="#this-state" class="headerlink" title="this.state"></a>this.state</h3><blockquote><p>组件免不了要和用户互动，React的一大创新就是把组件看成是一个状态机，一开始有个初始状态，然后用户互动，导致状态变化，从而重新出发渲染UI。</p></blockquote><p><strong>注意</strong>： <code>getInitialState</code> 方法用于定义初始状态，但同时它是一个对象，这个可以通过<code>this.state</code>属性读取。</p><p>当用户点击组件，导致状态发生变化，<code>this.setState</code> 方法就会修改状态值，每次修改完，会自动调用<code>this.render</code>方法，再次渲染组件。</p><p><code>this.props</code>和<code>this.state</code>都是描述组件的特性，但是不同的是<code>this.props</code>是指一旦定义好了，就不再发生变化的特性，而<code>this.state</code>是会随着用户互动而产生变化的特性。</p><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foods"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> FoodButton = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">        getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;<span class="attr">food</span>: <span class="literal">false</span>&#125;;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        callClick: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.setState(&#123;<span class="attr">food</span>: !<span class="keyword">this</span>.state.food&#125;);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> text1 = <span class="keyword">this</span>.state.food ? <span class="string">'like eat apple'</span> : <span class="string">'hate eat apple'</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">onClick</span>=<span class="string">&#123;this.callClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="undefined">              You &#123;text1&#125;!  </span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="undefined">          );</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">FoodButton</span> /&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'foods'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><blockquote><p>用户在表单填入的内容，属于用户和组件之间的互动，所以不能用<code>this.state</code>，而要定义一个<code>onChange</code>事件的回调函数，通过<code>event.target.value</code>读取用户的值。</p></blockquote><p><strong>注意：</strong><code>textarea</code>,<code>select</code>,<code>radio</code>都属于这种情况。</p><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> Food = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">        getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;<span class="attr">val</span>: <span class="string">'Welcome to React!'</span>&#125;;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        hanChange: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.setState(&#123;<span class="attr">val</span>:event.target.value&#125;);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> val = <span class="keyword">this</span>.state.val;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">&#123;val&#125;</span> <span class="attr">onChange</span>=<span class="string">&#123;this.hanChange&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;val&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">          );</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="javascript">      ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">Food</span> /&gt;</span>,document.getElementById('food'))</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件的生命周期"><a href="#组件的生命周期" class="headerlink" title="组件的生命周期"></a>组件的生命周期</h3><blockquote><p>React中组件的生命周期分为三个状态，<strong>Mounting</strong> 是已经插入真实DOM，<strong>Updating</strong> 是正在被重新渲染，<strong>Unmounting</strong> 是已移出真实DOM。</p></blockquote><p>每个状态都有两种处理函数，<strong>will</strong> 函数是进入状态之前，<strong>did</strong> 函数是进入状态之后，三种状态共计五种函数。</p><p><strong>注意</strong>：组件的样式style不能写成</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&#123;<span class="attr">opacity</span>: <span class="keyword">this</span>.state.opacity&#125;&gt;</span><br><span class="line">&lt;div style=&#123;&#123;<span class="attr">opacity</span>: <span class="keyword">this</span>.state.opacity&#125;&#125;&gt;</span><br></pre></td></tr></table></figure><p>因为React组件样式是个对象，所以第一个大括号表示Javascript语法，第二个大括号表示样式对象。</p><p><strong>五种函数</strong>:</p><ul><li><code>componentWillMount()</code></li><li><code>componentDidMount()</code></li><li><code>componentWillUpdate(object nextProps, object nextState)</code></li><li><code>componentWillUpdate(object prevState, object prevState)</code></li><li><code>componentWillUnMount()</code></li></ul><p>例如：第二种，在已插入真实DOM之后触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> Food = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">        getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">            opacity: 0</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        componentDidMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> opacity = <span class="keyword">this</span>.state.opacity;</span></span><br><span class="line"><span class="undefined">            opacity += .05;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (opacity &gt; <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="undefined">              opacity = 0;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.setState(&#123;</span></span><br><span class="line"><span class="undefined">              opacity: opacity</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="javascript">          &#125;.bind(<span class="keyword">this</span>),<span class="number">100</span>);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;opacity:</span> <span class="attr">this.state.opacity</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="javascript">              Hello, &#123;<span class="keyword">this</span>.props.title&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">          );</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Food</span> <span class="attr">title</span>=<span class="string">"apple"</span>/&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'food'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Ajax的使用"><a href="#Ajax的使用" class="headerlink" title="Ajax的使用"></a>Ajax的使用</h3><blockquote><p>组件的数据来源一般都是通过Ajax请求从服务器获取，可以使用<code>componentDidMount()</code>方法设置Ajax请求，等到请求成功，再用<code>this.setState</code>方法重新渲染UI。</p></blockquote><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> ClientGits = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">        getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            id: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            addr: <span class="string">''</span></span></span><br><span class="line"><span class="undefined">          &#125;;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        componentDidMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          $.get(<span class="keyword">this</span>.props.source,<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> gits = result[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.setState(&#123;</span></span><br><span class="line"><span class="undefined">              id: gits.id,</span></span><br><span class="line"><span class="undefined">              addr: gits.git_pull_url</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="javascript">          &#125;.bind(<span class="keyword">this</span>));</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">              UserId is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#userId'</span>&gt;</span>&#123;this.state.id&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, Git Address is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#123;this.state.addr&#125;</span>&gt;</span>&#123;this.state.addr&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>!</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">          );</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      ReactDOM.render(</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">ClientGits</span> <span class="attr">source</span>=<span class="string">"https://api.github.com/users/octocat/gists"</span> /&gt;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'food'</span>)</span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 上面采用了jquery的Ajax，还可以采用其他的库。我们甚至可以把Promise对象传入组件。</p><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../build/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"projects"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> Projects = React.createClass(&#123;</span></span><br><span class="line"><span class="javascript">          getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">              loading: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">              error: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">              data: <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">          componentDidMount() &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.props.promise.then(</span></span><br><span class="line"><span class="javascript">              value =&gt; <span class="keyword">this</span>.setState(&#123;<span class="attr">loading</span>: <span class="literal">false</span>, <span class="attr">data</span>: value&#125;),</span></span><br><span class="line"><span class="javascript">              error =&gt; <span class="keyword">this</span>.setState(&#123;<span class="attr">loading</span>: <span class="literal">false</span>, <span class="attr">error</span>: error&#125;)</span></span><br><span class="line"><span class="undefined">            )</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">          render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="keyword">this</span>.state.loading) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Loading...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>;</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.state.error != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Error:&#123;this.state.error.message&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>;</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">var</span> res = <span class="keyword">this</span>.state.data.items;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">var</span> resList = res.map(<span class="function"><span class="keyword">function</span> (<span class="params">res,index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">li</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#123;res.html_url&#125;</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;res.name&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>(&#123;res.stargazers_count&#125; stars)<span class="tag">&lt;<span class="name">br</span>/&gt;</span>&#123;res.description&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="undefined">                );</span></span><br><span class="line"><span class="undefined">              &#125;);</span></span><br><span class="line"><span class="javascript">              <span class="keyword">return</span> (</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Github上最受欢迎的JS项目<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;resList&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="undefined">              );</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        ReactDOM.render(</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">Projects</span> <span class="attr">promise</span>=<span class="string">&#123;$.getJSON(</span>'<span class="attr">https:</span>//<span class="attr">api.github.com</span>/<span class="attr">search</span>/<span class="attr">repositories</span>?<span class="attr">q</span>=<span class="string">javascript&amp;sort</span>=<span class="string">stars</span>')&#125; /&gt;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">'projects'</span>)</span></span><br><span class="line"><span class="undefined">        )</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以后还会总结一些有关react的知识点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：最近react非常火，所以我就简单跟着学了几个简单的知识点，在这里做一个学习总结。&lt;strong&gt;网址收藏&lt;/strong&gt;：&lt;a href=&quot;https://reactjs.org/&quot; target=&quot;_b
      
    
    </summary>
    
      <category term="javascript" scheme="https://guanqi.xyz/categories/javascript/"/>
    
    
      <category term="javascript" scheme="https://guanqi.xyz/tags/javascript/"/>
    
      <category term="react" scheme="https://guanqi.xyz/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统配置phpMyAdmin</title>
    <link href="https://guanqi.xyz//note/centos7-system-configuration-phpmyadmin/"/>
    <id>https://guanqi.xyz//note/centos7-system-configuration-phpmyadmin/</id>
    <published>2019-04-01T09:46:21.000Z</published>
    <updated>2019-07-14T08:37:57.752Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：今天介绍的是如何在Linux CentOS7系统中配置<em>phpMyAdmin</em>。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>环境准备</li><li>安装包</li><li>基本设置</li><li>网站预览</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>linux centos7系统</li><li>ssh软件</li><li>php语言环境</li><li>mysql数据库</li></ul><h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><p><a href="https://www.phpmyadmin.net/downloads/" target="_blank" rel="noopener">phpMyAdmin官网下载</a></p><p>安装前，请使用xshell连接远程服务器。</p><p>这次使用<code>wget</code>进行下载安装。</p><ul><li>首先，进入下载文件夹。</li></ul><p>这里是你存放下载包的地方。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/downloads</span><br></pre></td></tr></table></figure><ul><li>其次，下载phpMyAdmin包。</li></ul><p>如果没有wget安装可以下载<code>yum install wget</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://files.phpmyadmin.net/phpMyAdmin/4.8.5/phpMyAdmin-4.8.5-all-languages.zip</span><br></pre></td></tr></table></figure><ul><li>最后，解压安装包。</li></ul><p>如果没有zip安装可以下载<code>yum install zip unzip</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip phpMyAdmin-4.8.5-all-languages.zip</span><br></pre></td></tr></table></figure><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><ul><li>移动解压后的安装包到指定的文件夹中。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv phpMyAdmin-4.8.5-all-languages /usr/share/nginx/html/myadm</span><br><span class="line"><span class="built_in">cd</span> /usr/share/nginx/html/myadm</span><br></pre></td></tr></table></figure><ul><li>配置nginx站点</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/vhost/pam.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen        80;</span><br><span class="line">  server_name   phpmyadmin.guan.org;</span><br><span class="line">  access_log    /var/log/nginx/phpmyadmin-access.log main;</span><br><span class="line">  error_log     /var/log/nginx/phpmyadmin-error.log;</span><br><span class="line">  location / &#123;</span><br><span class="line">    root    /usr/share/nginx/html/myadm;</span><br><span class="line">    index   index.php;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php$ &#123;</span><br><span class="line">    root            /usr/share/nginx/html/myadm;</span><br><span class="line">    fastcgi_pass    127.0.0.1:9000;</span><br><span class="line">    fastcgi_index   index.php;</span><br><span class="line">    fastcgi_param   SCRIPT_FILENAME /usr/share/nginx/html/myadm/$fastcgi_script_name;</span><br><span class="line">    include         fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ /\.ht &#123;</span><br><span class="line">    deny all;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网站预览"><a href="#网站预览" class="headerlink" title="网站预览"></a>网站预览</h2><p>在本地<code>hosts</code>文件中加入一条dns记录。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123  phpmyadmin.example.org;</span><br></pre></td></tr></table></figure><p>接下来在游览器输入<code>phpmyadmin.example.org</code>,就可以访问了。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>这是最基础的准备,就到这里吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：今天介绍的是如何在Linux CentOS7系统中配置&lt;em&gt;phpMyAdmin&lt;/em&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="phpmyadmin" scheme="https://guanqi.xyz/tags/phpmyadmin/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统中php安装配置</title>
    <link href="https://guanqi.xyz//note/php-installation-and-configuration-in-centos7-system/"/>
    <id>https://guanqi.xyz//note/php-installation-and-configuration-in-centos7-system/</id>
    <published>2019-03-26T08:40:21.000Z</published>
    <updated>2019-07-14T08:33:45.435Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：本篇讲解如何配置php开发环境，让你的php代码可以正常的在网页中运行。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>linux centos7操作系统</li><li>ssh软件</li><li>nginx</li></ul><h2 id="php资源"><a href="#php资源" class="headerlink" title="php资源"></a>php资源</h2><p>想要了解更多关于php的内容，请访问：</p><ul><li><a href="http://php.net" target="_blank" rel="noopener">php官网</a></li></ul><h2 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h2><p>本次安装介绍两个版本的安装方法，一个是广泛应用的5.x,另一个是最新版的7.2。</p><ul><li>安装php5.4+</li><li>安装php7.2</li></ul><h2 id="安装php5-x"><a href="#安装php5-x" class="headerlink" title="安装php5.x"></a>安装php5.x</h2><p>第一步,使用yum安装php。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php</span><br></pre></td></tr></table></figure><p>第二步，安装php的相关模块。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php-mysql php-fpm php-cli php-dba php-embedded php-gd php-common php-bcmatch php-enchant php-devel</span><br></pre></td></tr></table></figure><p>第三步，打印php版本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -v</span><br></pre></td></tr></table></figure><p>如果有显示版本号，说明安装成功。</p><h2 id="安装最新版php7-2"><a href="#安装最新版php7-2" class="headerlink" title="安装最新版php7.2"></a>安装最新版php7.2</h2><p>安装之前，如果你的系统还有php旧版本，请卸载，避免发生冲突。</p><p>卸载方法：<code>yum -y remove php*</code></p><p>由于yum没有php7.2，所以需要额外配置php7.2版本,方法如下:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/<span class="number">7</span>/x86_64/Packages/e/epel-release-<span class="number">7</span>-<span class="number">11</span>.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><p>开始安装php7.2版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php72w php72w-cli php72w-fpm php72w-common php72w-devel php72w-embedded php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</span><br></pre></td></tr></table></figure><p><strong>php-fpm</strong>是php的一个php的fast-cgi服务管理器，专门用于控制php-cgi的fastcgi进程。</p><p>所以我们开始启动php-fpm服务。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start php-fpm</span><br><span class="line">systemctl <span class="built_in">enable</span> php-fpm</span><br></pre></td></tr></table></figure><p>最后运行<code>php -v</code>就可以查看版本号了。</p><h2 id="nginx配置php环境"><a href="#nginx配置php环境" class="headerlink" title="nginx配置php环境"></a>nginx配置php环境</h2><p>打开nginx配置文件，输入以下内容。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>在配置文件里面找到<code>http { }</code>，在里面输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># fastcgi conf</span><br><span class="line">fastcgi_connect_timeout 300;  </span><br><span class="line">fastcgi_send_timeout 300;  </span><br><span class="line">fastcgi_read_timeout 300;  </span><br><span class="line">fastcgi_buffer_size 64k;  </span><br><span class="line">fastcgi_buffers 4 64k;  </span><br><span class="line">fastcgi_busy_buffers_size 128k;  </span><br><span class="line">fastcgi_temp_file_write_size 128k;  </span><br><span class="line"># php配置</span><br><span class="line">server &#123;  </span><br><span class="line">  listen   80;  # 监听端口</span><br><span class="line">  server_name  www.example.org; # 访问域名  </span><br><span class="line">  access_log  /var/www/eg/access.log; # 成功日志</span><br><span class="line">  error_log  /var/www/eg/access.log; # 错误日志</span><br><span class="line">  root   /var/www/eg; # 根目录</span><br><span class="line">  index  index.html index.htm index.php; # 首页文件格式</span><br><span class="line">  # php解析配置</span><br><span class="line">  location ~ .*\.(php|php5)?$ &#123;</span><br><span class="line">    root   /var/www/html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">    fastcgi_index  index.php;  </span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  /var/www/eg$fastcgi_script_name;  </span><br><span class="line">    include fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">  # 静态文件图片规则</span><br><span class="line">  location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">    expires  30d;</span><br><span class="line">  &#125;</span><br><span class="line">  # 静态文件js、css规则</span><br><span class="line">  location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">    expires  1h;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完了以后重载重启nginx。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>然后创建一个php文件，访问地址，便可以看到输出结果。</p><ul><li>创建目录：<code>mkdir /var/www/eg</code></li><li>创建文件: <code>vi /var/www/eg/info.php</code></li></ul><p>输入以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"hello,world！"</span>;</span><br><span class="line"> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>在本地<strong>hosts</strong>文件增加解析记录,这里的ip就是你远程服务器的ip地址了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123 www.example.org</span><br></pre></td></tr></table></figure><p>打开游览器，输入<code>http://www.example.org/info.php</code>就可以看到之前编辑的站点的php文件内容了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：本篇讲解如何配置php开发环境，让你的php代码可以正常的在网页中运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="php" scheme="https://guanqi.xyz/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统配置nginx服务器</title>
    <link href="https://guanqi.xyz//note/centos7-system-configuration-nginx-server/"/>
    <id>https://guanqi.xyz//note/centos7-system-configuration-nginx-server/</id>
    <published>2019-03-26T08:36:21.000Z</published>
    <updated>2019-07-14T10:41:45.587Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：作为一个以服务器为主要市场的操作系统，主要就是对客户端的请求进行响应，进行处理的。在经历过系统镜像安装和本地配置好ssh功能后，接下来进行服务器的安装，这里我以nginx为主，介绍一下如何安装nginx和配置站点，</p></blockquote><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><ul><li>linux centos7系统</li><li>ssh软件</li></ul><h2 id="nginx简介"><a href="#nginx简介" class="headerlink" title="nginx简介"></a>nginx简介</h2><p><a href="http://nginx.org/" target="_blank" rel="noopener">nginx官网</a></p><p>nginx作者是伊戈尔·赛索耶夫，最初是为一个俄罗斯访问量第二大的网站开发的服务器。</p><p>nginx主要是有以下几个功能：</p><ul><li>免费开源的服务器</li><li>轻量级的服务器，安装包只有几百KB</li><li>高性能的web服务器</li><li>反向代理服务器</li><li>负载均衡</li><li>电子邮件代理服务器</li></ul><p>nginx国内大陆的网站用户有腾讯、百度、淘宝、网易、京东和新浪等。</p><h2 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h2><ul><li>添加安装包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>安装软件包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><h2 id="nginx程序启动"><a href="#nginx程序启动" class="headerlink" title="nginx程序启动"></a>nginx程序启动</h2><p>你可以执行<code>nginx -v</code>查看版本。</p><p>系统启动并且设置为开机自启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p>由于nginx默认是80端口，所以你需要开放80端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="增加一条hosts记录"><a href="#增加一条hosts记录" class="headerlink" title="增加一条hosts记录"></a>增加一条hosts记录</h2><p>打开系统hosts文件,这里就以<code>www.example.com</code>为例。</p><p>如果你不清楚自己的系统ip是多少，可以运行下面这个命令安装服务包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y net-tools</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>就会看到自己的ip地址了。</p><ul><li>首先我们进入hosts文件，<code>vi /etc/hosts</code></li><li>然后按一下键盘上的<code>Insert</code>， 输入内容 <code>127.0.0.1 www.example.com</code>;</li><li>最后按住键盘上的<code>Esc</code>，输入<code>:wq</code>或者<code>:x</code>保存并且退出。</li></ul><p>到游览器地址栏输入刚刚保存的网址，就可以看到一下内容。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../img/article/nginx.jpg" alt="nginx" title="">                </div>                <div class="image-caption">nginx</div>            </figure><h2 id="配置一个站点"><a href="#配置一个站点" class="headerlink" title="配置一个站点"></a>配置一个站点</h2><p>nginx的全局配置文件<code>vi /etc/nginx/nginx.conf</code></p><p>接下来我会配置一个简单的静态站点作为示例。</p><ul><li>创建一个文件夹用来存放站点文件。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/www/sites</span><br></pre></td></tr></table></figure><ul><li>新建一个网页</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /var/www/sites/index.html</span><br></pre></td></tr></table></figure><p>然后依照上面的文件编辑保存步骤输入内容并且保存。</p><p>这是我的网站首页内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>示例站点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome to visted my web site!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加配置文件夹和文件</li></ul><p>进入nginx的目录下，创建一个文件夹和文件。</p><p>进入<code>nginx.conf</code>文件，在<code>http</code>属性下面加一个<code>include /etc/nginx/vhost/*.conf;</code>。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nginx/vhost</span><br><span class="line">vi /etc/nginx/vhost/example.com.conf</span><br></pre></td></tr></table></figure><p>输入以下内容并且保存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen        80; # 监听的端口，这里是80端口</span><br><span class="line">  server_name   www.example.com example.com; # 这里是地址栏要访问的域名，可以写多个</span><br><span class="line">  access_log /var/www/sites/access.log; # 访问成功日志文件</span><br><span class="line">  error_log /var/www/sites/error.log; # 访问错误日志文件</span><br><span class="line">  location / &#123;</span><br><span class="line">    root /var/www/sites; # 站点目录</span><br><span class="line">    index index.html index.htm; # 站点首页文件名称</span><br><span class="line">  &#125;</span><br><span class="line">  error_page   500 502 503 504  /50x.html; #错误页面</span><br><span class="line">  location = /50x.html &#123;</span><br><span class="line">      root   /usr/share/nginx/html;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完了以后重载重启nginx。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>【技巧】这里有一个小技巧，可以检测你写的nginx配置站点文件语法是否正确，可以帮助你减少不必要的烦恼。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t -c /etc/nginx/nginx.conf</span><br><span class="line">//如果结果没有报错，说明是你写的语法没有问题，反之则要根据错误提示，找到对应的配置文件，更改内容。</span><br></pre></td></tr></table></figure><p>在本地<strong>hosts</strong>文件增加解析记录,这里的ip就是你远程服务器的ip地址了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.123 www.example.com</span><br><span class="line">192.168.1.123 example.com</span><br></pre></td></tr></table></figure><ul><li>预览</li></ul><p>打开游览器，输入<code>www.example.com</code>或者<code>example.com</code>就可以看到之前编辑的站点首页内容了。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>今天只是初步探究nginx的用法，其他的功能下次补充完善。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：作为一个以服务器为主要市场的操作系统，主要就是对客户端的请求进行响应，进行处理的。在经历过系统镜像安装和本地配置好ssh功能后，接下来进行服务器的安装，这里我以nginx为主，介绍一下如何安装nginx和配置
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="nginx" scheme="https://guanqi.xyz/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统中ssh的用法</title>
    <link href="https://guanqi.xyz//note/usage-of-ssh-in-centos7-system/"/>
    <id>https://guanqi.xyz//note/usage-of-ssh-in-centos7-system/</id>
    <published>2019-03-26T08:36:21.000Z</published>
    <updated>2019-07-14T10:43:33.675Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>:大家都知道，公司买上服务器，不可能实时在线操作虚拟机，也没有那个时间和精力登录到公司的云服务商官网进行操作，一来不安全，二来也效率不高。</p></blockquote><p>如果是购买的虚拟主机，你可以使用ftp进行本地程序文件传输和从虚拟主机下载文件到本地。但是对于云服务器来说这种操作方法就显得落后许多了。</p><p>今天主要是重点讲解如何使用ssh来操作Linux系统，还是以centos7为蓝本。</p><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><ul><li>linux centos7系统</li></ul><h2 id="安装ssh程序包"><a href="#安装ssh程序包" class="headerlink" title="安装ssh程序包"></a>安装ssh程序包</h2><p>打开系统命令行，输入以下命令下载包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssh-server</span><br></pre></td></tr></table></figure><p>等待几分钟就下载好了。</p><h2 id="启动ssh服务"><a href="#启动ssh服务" class="headerlink" title="启动ssh服务"></a>启动ssh服务</h2><p>接下来我们运行以下命令使ssh服务可以长时间在线运行。</p><ul><li>启动ssh服务程序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure><ul><li>开机自启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure><ul><li>开启防火墙服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=ftp/tcp --permanent</span><br><span class="line">firewall-cmd --add-service=http/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="下载ssh软件"><a href="#下载ssh软件" class="headerlink" title="下载ssh软件"></a>下载ssh软件</h2><p>这里推荐两个不错的软件。</p><ul><li><p><a href="https://www.putty.org/" target="_blank" rel="noopener">putty</a>；</p></li><li><p><a href="http://www.xshellcn.com/" target="_blank" rel="noopener">xshell</a>；</p></li></ul><p>下载完了安装到本地，下一步安装你懂的。</p><h2 id="连接服务"><a href="#连接服务" class="headerlink" title="连接服务"></a>连接服务</h2><p>下载好 以后，你就可以进行连接远程云服务器进行操作了.</p><p>那个ip地址就是你服务器的ip，账号和密码就是你服务器的登录账号的密码，或者是你在系统上创建的其他账户的用户名和密码。</p><p>那个端口号是默认22，所以你要开启防火墙添加这个端口号。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=22/tcp --permanent</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>如果你的账号是root账号，就不需要加<code>sudo</code>了，否则请在命令前面加。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>本文主要是自己的亲身体验，最后做一个总结。如有不足之处，还请多多指教。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;:大家都知道，公司买上服务器，不可能实时在线操作虚拟机，也没有那个时间和精力登录到公司的云服务商官网进行操作，一来不安全，二来也效率不高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果是购买的虚拟主机，你可以
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="ssh" scheme="https://guanqi.xyz/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7系统中mysql8安装配置</title>
    <link href="https://guanqi.xyz//note/mysql8-installation-configuration-in-centos7-system/"/>
    <id>https://guanqi.xyz//note/mysql8-installation-configuration-in-centos7-system/</id>
    <published>2019-03-26T08:36:21.000Z</published>
    <updated>2019-07-14T08:29:57.218Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：mysql是世界上最流行的关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司所有。今天我将记录一下如何在Linux centos7系统上安装和配置MySQL。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>环境准备</li><li>安装包</li><li>基本设置</li><li>语法操作</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>linux centos7操作系统</li><li>ssh软件</li><li><a href="https://www.mysql.com/" target="_blank" rel="noopener">MySQL官网</a></li></ul><h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><p><strong>第一步</strong>：进入下载文件夹，就是你要存放安装包的文件夹。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/downloads</span><br></pre></td></tr></table></figure><p><strong>第二步</strong>：下载安装包，并且用rpm添加MySQL程序包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm</span><br><span class="line">rpm -ivh mysql80-community-release-el7-1.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>第三步</strong>：安装包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y  mysql-community-server</span><br></pre></td></tr></table></figure><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><ul><li>启动并开机自启动MySQL程序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><ul><li>查看版本信息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br></pre></td></tr></table></figure><ul><li>修改密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//查看临时密码</span><br><span class="line">grep <span class="string">"A temporary password"</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line"></span><br><span class="line">//进入mysql</span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">//修改密码</span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'MYsql123.'</span>;</span><br></pre></td></tr></table></figure><ul><li>添加防火墙端口</li></ul><p>MySQL默认的端口是3306，所有在防火墙中添加一个永久的端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=3306/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="语法操作"><a href="#语法操作" class="headerlink" title="语法操作"></a>语法操作</h2><p>MySQL的一些语法操作基本上是增删查改不离手，分为数据库操作、数据表操作、用户操作、权限管理等，这次介绍一些查用的操作命令。</p><p>想要获取更多内容，请访问MySQL的<a href="https://dev.mysql.com/doc/refman/8.0/en/" target="_blank" rel="noopener">官方文档</a>。</p><ul><li>数据库操作</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//添加数据库</span><br><span class="line">mysql&gt; CREATE DATABASE mydb;</span><br><span class="line">//查看数据库</span><br><span class="line">mysql&gt; SHOW DATABASES;</span><br><span class="line">//使用数据库</span><br><span class="line">mysql&gt; USE &lt;database name&gt;;</span><br></pre></td></tr></table></figure><ul><li>数据表操作</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//查看数据表</span><br><span class="line">mysql&gt; SHOW TABLES;</span><br><span class="line">//创建数据表</span><br><span class="line">mysql&gt; CREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20),</span><br><span class="line">       species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);</span><br></pre></td></tr></table></figure><ul><li>用户操作</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//新建本地用户</span><br><span class="line">mysql&gt; CREATE USER <span class="string">'test'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line">//新建远程用户</span><br><span class="line">mysql&gt; CREATE USER <span class="string">'test'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line">//赋予指定账户指定数据库远程访问权限</span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON mydb.* TO <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">//赋予指定账户对所有数据库远程访问权限</span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">//赋予指定账户对所有数据库本地访问权限</span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'test'</span>@<span class="string">'localhost'</span>;</span><br><span class="line"></span><br><span class="line">//刷新权限</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul><li>权限管理</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//查看权限</span><br><span class="line">SHOW GRANTS FOR <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">//赋予权限</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">//收回权限</span><br><span class="line">REVOKE ALL PRIVILEGES ON *.* FROM <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">//刷新权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">//删除用户</span><br><span class="line">DROP USER <span class="string">'test'</span>@<span class="string">'localhost'</span>;</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>打开phpadmin无法登录</p><p>因为MySQL8使用了更高级的方法，phpmyadmin不支持，所以需要使用以下语法来重置登录密码。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER <span class="string">'&lt;你的用户名&gt;'</span> IDENTIFIED WITH <span class="string">'mysql_native_password'</span> BY <span class="string">'&lt;你的密码&gt;'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'test'</span>@<span class="string">'%'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：mysql是世界上最流行的关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司所有。今天我将记录一下如何在Linux centos7系统上安装和配置MySQL。&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="mysql" scheme="https://guanqi.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>linux系统探索</title>
    <link href="https://guanqi.xyz//note/linux-system-exploration/"/>
    <id>https://guanqi.xyz//note/linux-system-exploration/</id>
    <published>2019-03-25T10:36:21.000Z</published>
    <updated>2019-07-14T08:16:54.433Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：想着用着微软家的windows系统很多年了，也想尝试一下其他的操作系统。很快的就想到了Linux操作系统，它不是面向用户的，而是面向服务器的，在服务器端的市场中占了很大的市场份额，备受好评。</p></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>Linux特点</li><li>特别说明</li><li>yum常用命令</li><li>程序相关命令</li><li>防火墙相关命令</li></ul><h2 id="Linux特点"><a href="#Linux特点" class="headerlink" title="Linux特点"></a>Linux特点</h2><p>基于以下几点，我决定探究一下Linux系统。</p><ul><li>Linux系统是全世界少有的免费、开源的、自由传播的类Unix操作系统；</li><li>命令行操作文件、程序比较灵活、迅速，非常高效；</li></ul><h2 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h2><p>本文主要是使用centos7进行系统的各项操作。</p><p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">centos7操作系统镜像下载地址</a></p><h2 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h2><p>yum是一个shell前端软件包管理器，基于rpm管理，一次性安装所有依赖，无需频繁下载依赖。</p><h3 id="查找软件包"><a href="#查找软件包" class="headerlink" title="查找软件包"></a>查找软件包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search &lt;keyword&gt;</span><br></pre></td></tr></table></figure><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h3 id="安装包列表"><a href="#安装包列表" class="headerlink" title="安装包列表"></a>安装包列表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br></pre></td></tr></table></figure><h3 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h3><ul><li>更新一个包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>更新所有</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><h3 id="查询软件信息"><a href="#查询软件信息" class="headerlink" title="查询软件信息"></a>查询软件信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h3 id="卸载安装包"><a href="#卸载安装包" class="headerlink" title="卸载安装包"></a>卸载安装包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean packages</span><br></pre></td></tr></table></figure><h2 id="程序相关命令"><a href="#程序相关命令" class="headerlink" title="程序相关命令"></a>程序相关命令</h2><ul><li>启动程序运行</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start &lt;name&gt;.service</span><br><span class="line">//或者</span><br><span class="line">systemctl start &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>停止程序运行</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop &lt;name&gt;.service</span><br><span class="line">//或者</span><br><span class="line">systemctl stop &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>重启程序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart &lt;name&gt;.service</span><br><span class="line">//或者</span><br><span class="line">systemctl restart &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>重载程序配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload &lt;name&gt;.service</span><br><span class="line">//或者</span><br><span class="line">systemctl reload &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>查看程序状态</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status &lt;name&gt;.service</span><br><span class="line">//或者</span><br><span class="line">systemctl status &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>开机自启动程序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> &lt;name&gt;</span><br></pre></td></tr></table></figure><ul><li>禁止开机启动程序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> &lt;name&gt;</span><br></pre></td></tr></table></figure><h2 id="防火墙相关命令"><a href="#防火墙相关命令" class="headerlink" title="防火墙相关命令"></a>防火墙相关命令</h2><h3 id="端口操作命令"><a href="#端口操作命令" class="headerlink" title="端口操作命令"></a>端口操作命令</h3><ul><li>查看防火墙版本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --version</span><br></pre></td></tr></table></figure><ul><li>防火墙帮助</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><ul><li>查看防火墙状态</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><ul><li>查看已启用的端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-port</span><br></pre></td></tr></table></figure><ul><li>开启某个端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=&lt;port&gt;/tcp --permanent</span><br><span class="line">// --permanent表示永久有效</span><br></pre></td></tr></table></figure><ul><li>开启某个区间的端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=&lt;port_start&gt;-&lt;port_end&gt;/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>关闭某个端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-port=&lt;port&gt;/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>开启某个区间的端口</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-port=&lt;port_start&gt;-&lt;port_end&gt;/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>开启服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=&lt;service_name&gt; --permanent</span><br></pre></td></tr></table></figure><ul><li>关闭服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-service=&lt;service_name&gt; --permanent</span><br></pre></td></tr></table></figure><ul><li>重载防火墙配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>Linux初次探索就到这里，下次我再分享其他有趣好玩的故事。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：想着用着微软家的windows系统很多年了，也想尝试一下其他的操作系统。很快的就想到了Linux操作系统，它不是面向用户的，而是面向服务器的，在服务器端的市场中占了很大的市场份额，备受好评。&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
      <category term="linux" scheme="https://guanqi.xyz/categories/linux/"/>
    
    
      <category term="linux" scheme="https://guanqi.xyz/tags/linux/"/>
    
      <category term="centos7" scheme="https://guanqi.xyz/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>表单输入验证案例</title>
    <link href="https://guanqi.xyz//note/form-input-verification-case/"/>
    <id>https://guanqi.xyz//note/form-input-verification-case/</id>
    <published>2019-02-01T08:33:21.000Z</published>
    <updated>2019-07-14T08:14:10.515Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：之前已经说过了事件的来龙去脉和属性以及方法，今天就说一下表单的案例。</p></blockquote><h2 id="案例步骤"><a href="#案例步骤" class="headerlink" title="案例步骤"></a>案例步骤</h2><ul><li>1.建好表单结构和样式；</li><li>2.获取输入内容进行验证；</li><li>3.不正确进行文字提示；</li><li>4.输入成功后提交表单</li></ul><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">name</span>=<span class="string">"myform"</span> <span class="attr">id</span>=<span class="string">"myform"</span> <span class="attr">onsubmit</span>=<span class="string">"return returnForm();"</span> <span class="attr">onreset</span>=<span class="string">"return confirmForm();"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>昵称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名称"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户密码"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"man"</span> <span class="attr">value</span>=<span class="string">"man"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"man"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"woman"</span> <span class="attr">value</span>=<span class="string">"woman"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"woman"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"hobbies"</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span> <span class="attr">id</span>=<span class="string">"song"</span> <span class="attr">value</span>=<span class="string">"song"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"song"</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span> <span class="attr">id</span>=<span class="string">"read"</span> <span class="attr">value</span>=<span class="string">"read"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"read"</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span> <span class="attr">id</span>=<span class="string">"sport"</span> <span class="attr">value</span>=<span class="string">"sport"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sport"</span>&gt;</span>运动<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>城市：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"bj"</span> <span class="attr">selected</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"tj"</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"cq"</span>&gt;</span>重庆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"sh"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"hz"</span>&gt;</span>杭州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"nj"</span>&gt;</span>南京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"gz"</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"sz"</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"xa"</span>&gt;</span>西安<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"headimg"</span>&gt;</span>头像：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"headimg"</span> <span class="attr">id</span>=<span class="string">"headimg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"token"</span> <span class="attr">value</span>=<span class="string">"20190201"</span> <span class="attr">id</span>=<span class="string">"token"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"comment"</span>&gt;</span>介绍：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">id</span>=<span class="string">"comment"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">placeholder</span>=<span class="string">"自我介绍一下吧！"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">id</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://guanqi.xyz/demo/assets/scripts/gjs.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>前提是你要引入一个js文件，分别是gjs.js</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tips</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//禁止默认提交</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">returnForm</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//确定重置提示</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">confirmForm</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reset = confirm(<span class="string">'你确定要清空所有输入的内容吗？'</span>);</span><br><span class="line">  <span class="keyword">return</span> reset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证表单内容</span></span><br><span class="line"><span class="keyword">var</span> tips = $g.ecls(<span class="string">'tips'</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.myform.submit;</span><br><span class="line">$g.addEvent(btn, <span class="string">'click'</span>, checkFrom, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFrom</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//正则表达式</span></span><br><span class="line">  <span class="keyword">var</span> formreg = <span class="regexp">/\w&#123;5,&#125;/</span>;</span><br><span class="line">  <span class="comment">//表单元素</span></span><br><span class="line">  <span class="keyword">var</span> myform = <span class="built_in">document</span>.myform;</span><br><span class="line">  <span class="keyword">var</span> username = myform.username.value;</span><br><span class="line">  <span class="keyword">var</span> password = myform.password.value;</span><br><span class="line">  <span class="keyword">var</span> sex = myform.sex.value;</span><br><span class="line">  <span class="keyword">var</span> hobbies = myform.hobbies;</span><br><span class="line">  <span class="keyword">var</span> city = myform.city.value;</span><br><span class="line">  <span class="keyword">var</span> headimg = myform.headimg.value;</span><br><span class="line">  <span class="keyword">var</span> comment = myform.comment.value;</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (username == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">0</span>].innerText = <span class="string">'昵称不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!formreg.test(username)) &#123;</span><br><span class="line">    tips[<span class="number">0</span>].innerText = <span class="string">'请输入6-10位名字'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">0</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (password == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">1</span>].innerText = <span class="string">'密码不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!formreg.test(password)) &#123;</span><br><span class="line">    tips[<span class="number">1</span>].innerText = <span class="string">'请输入至少6位密码'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">1</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (sex == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">2</span>].innerText = <span class="string">'性别不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">2</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> isChecked;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hobbies.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> checked = hobbies[i].checked;</span><br><span class="line">    <span class="keyword">if</span> (checked) &#123;</span><br><span class="line">      isChecked = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isChecked) &#123;</span><br><span class="line">    tips[<span class="number">3</span>].innerText = <span class="string">'爱好不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">3</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (city == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">4</span>].innerText = <span class="string">'城市不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">4</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (headimg == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">5</span>].innerText = <span class="string">'头像不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">5</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (comment == <span class="string">''</span>) &#123;</span><br><span class="line">    tips[<span class="number">6</span>].innerText = <span class="string">'自我介绍不能为空'</span>;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    tips[<span class="number">6</span>].innerText = <span class="string">''</span>;</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>这个例子是兼容IE5-11，Firefox，Google Chrome等游览器的。</p><p>如果你想要看效果，请点击【<a href="https://guanqi.xyz/demo/cases/validate?from=blog">这里</a>】前去GitHub查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：之前已经说过了事件的来龙去脉和属性以及方法，今天就说一下表单的案例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;案例步骤&quot;&gt;&lt;a href=&quot;#案例步骤&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="前端案例" scheme="https://guanqi.xyz/categories/%E5%89%8D%E7%AB%AF%E6%A1%88%E4%BE%8B/"/>
    
    
      <category term="前端案例" scheme="https://guanqi.xyz/tags/%E5%89%8D%E7%AB%AF%E6%A1%88%E4%BE%8B/"/>
    
      <category term="表单验证" scheme="https://guanqi.xyz/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>鼠标和键盘事件案例</title>
    <link href="https://guanqi.xyz//note/mouse-and-keyboard-event-case/"/>
    <id>https://guanqi.xyz//note/mouse-and-keyboard-event-case/</id>
    <published>2019-02-01T02:33:21.000Z</published>
    <updated>2019-07-14T08:09:51.122Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：之前已经说过了事件的来龙去脉和属性以及方法，今天就说一下鼠标和键盘事件的案例。</p></blockquote><h2 id="温馨提示"><a href="#温馨提示" class="headerlink" title="温馨提示"></a>温馨提示</h2><p>前提是你要引入一个gjs.js文件 <code>https://guanqi.xyz/demo/assets/scripts/gjs.min.js</code> 才可以运行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://guanqi.xyz/demo/assets/scripts/gjs.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="鼠标和键盘事件"><a href="#鼠标和键盘事件" class="headerlink" title="鼠标和键盘事件"></a>鼠标和键盘事件</h2><p>鼠标和键盘事件就是设备相关的事件，可以使用鼠标和键盘对文档进行操作，触发相应的事件。</p><h2 id="鼠标事件案例"><a href="#鼠标事件案例" class="headerlink" title="鼠标事件案例"></a>鼠标事件案例</h2><p>既然之前已经知道了如何使用鼠标事件，那本节就提出两个案例，来对学过的知识的实践。</p><p>本节有两个案例，第一个是有关右击鼠标显示自定义菜单的；第二个是有关如何使用鼠标进行拖拽元素。</p><h3 id="鼠标右击自定义菜单"><a href="#鼠标右击自定义菜单" class="headerlink" title="鼠标右击自定义菜单"></a>鼠标右击自定义菜单</h3><p>原理：</p><ul><li>当鼠标右键按下后，获取鼠标坐标，然后赋值并且显示菜单元素；</li><li>当鼠标左键按下后，隐藏菜单元素；</li></ul><h4 id="菜单样式"><a href="#菜单样式" class="headerlink" title="菜单样式"></a>菜单样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#menu1"</span>&gt;</span>菜单1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#menu2"</span>&gt;</span>菜单2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#menu3"</span>&gt;</span>菜单3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#menu4"</span>&gt;</span>菜单4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#list</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">240px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#list</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动效js操作"><a href="#动效js操作" class="headerlink" title="动效js操作"></a>动效js操作</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uls = $g.eid(<span class="string">'list'</span>);</span><br><span class="line">$g.addEvent(<span class="built_in">document</span>, <span class="string">'contextmenu'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  $g.prevent(e);</span><br><span class="line">  $g.stoppro(e);</span><br><span class="line">  uls.style.left = e.clientX + <span class="string">'px'</span>;</span><br><span class="line">  uls.style.top = e.clientY + <span class="string">'px'</span>;</span><br><span class="line">  uls.style.display = <span class="string">'block'</span>;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line">$g.addEvent(<span class="built_in">document</span>, <span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  uls.style.display = <span class="string">'none'</span>;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>这个案例就到此为止，请点<a href="https://guanqi.xyz/demo/cases/selfmenu?from=blog">这里</a>在GitHub上查看效果。</p><h3 id="元素拖拽示例"><a href="#元素拖拽示例" class="headerlink" title="元素拖拽示例"></a>元素拖拽示例</h3><p>原理：</p><ul><li>1.当点击鼠标，获取到鼠标坐标位置；然后减去元素距离左/上边的距离；</li><li>2.当移动元素，获取到元素距离左上的距离；用鼠标的坐标值减去上一步的值；</li><li>3.当放开鼠标，禁用鼠标移动事件和按下事件；</li></ul><h3 id="元素和样式"><a href="#元素和样式" class="headerlink" title="元素和样式"></a>元素和样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="js动效"><a href="#js动效" class="headerlink" title="js动效"></a>js动效</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = $g.eone(<span class="string">'.box'</span>);</span><br><span class="line"><span class="keyword">var</span> box1 = $g.eone(<span class="string">'.box1'</span>);</span><br><span class="line"><span class="keyword">new</span> $g.Drag(box);</span><br><span class="line"><span class="keyword">new</span> $g.Drag(box1);</span><br></pre></td></tr></table></figure><p>这个案例就到此为止，请点<a href="https://guanqi.xyz/demo/cases/drag?from=blog">这里</a>在GitHub上查看效果。</p><h2 id="键盘事件案例"><a href="#键盘事件案例" class="headerlink" title="键盘事件案例"></a>键盘事件案例</h2><p>键盘事件案例一般是用于鼠标事件案例的替代选择，如果用户的设备只支持键盘，就可以使用键盘事件代替是鼠标事件。</p><p>大多数事件都是有鼠标事件对应的键盘事件，两个事件都是可以触发同一函数方法的。</p><p>这个案例就是模拟聊天窗口，按住<code>Enter</code>键盘键，然后发送聊天内容。</p><h3 id="聊天窗口模拟案例"><a href="#聊天窗口模拟案例" class="headerlink" title="聊天窗口模拟案例"></a>聊天窗口模拟案例</h3><p>原理：当输入框输完内容后，按下键盘上的<code>Enter</code>发送聊天内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"con"</span> <span class="attr">id</span>=<span class="string">"con"</span> <span class="attr">placeholder</span>=<span class="string">"请输入聊天内容"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"send"</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;  </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#send</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f8f8f8</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = $g.eid(<span class="string">'box'</span>);</span><br><span class="line"><span class="keyword">var</span> con = $g.eid(<span class="string">'con'</span>);</span><br><span class="line"><span class="keyword">var</span> send = $g.eid(<span class="string">'send'</span>);</span><br><span class="line"></span><br><span class="line">$g.addEvent(send, <span class="string">'click'</span>, sendCon, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendCon</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (con.value == <span class="string">''</span>) &#123;</span><br><span class="line">    alert(<span class="string">'请输入内容！'</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  box.innerHTML += <span class="string">'&lt;p style="margin:2px auto;"&gt;'</span> + con.value + <span class="string">'&lt;/p&gt;&lt;br&gt;'</span></span><br><span class="line">  con.value = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$g.addEvent(con, <span class="string">'keypress'</span>, sendKey, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendKey</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</span><br><span class="line">  <span class="keyword">var</span> code = e.code;</span><br><span class="line">  <span class="keyword">if</span> (code == <span class="string">'Enter'</span> || e.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (con.value == <span class="string">''</span>) &#123;</span><br><span class="line">      alert(<span class="string">'请输入内容！'</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    box.innerHTML += <span class="string">'&lt;p style="margin:2px auto;"&gt;'</span> + con.value + <span class="string">'&lt;/p&gt;&lt;br&gt;'</span></span><br><span class="line">    con.value = <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想看效果，可以点<a href="https://guanqi.xyz/demo/cases/smallchat?from=blog">这里</a>在GitHub上查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：之前已经说过了事件的来龙去脉和属性以及方法，今天就说一下鼠标和键盘事件的案例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;温馨提示&quot;&gt;&lt;a href=&quot;#温馨提示&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="前端案例" scheme="https://guanqi.xyz/categories/%E5%89%8D%E7%AB%AF%E6%A1%88%E4%BE%8B/"/>
    
    
      <category term="前端案例" scheme="https://guanqi.xyz/tags/%E5%89%8D%E7%AB%AF%E6%A1%88%E4%BE%8B/"/>
    
      <category term="表单键盘案例" scheme="https://guanqi.xyz/tags/%E8%A1%A8%E5%8D%95%E9%94%AE%E7%9B%98%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>js之事件解读</title>
    <link href="https://guanqi.xyz//note/interpretation-of-js-events/"/>
    <id>https://guanqi.xyz//note/interpretation-of-js-events/</id>
    <published>2019-01-31T02:33:21.000Z</published>
    <updated>2019-07-14T08:06:09.915Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>导语</strong>：在js中，具有交互性程序的是事件驱动。它可以很好的和用户进行互动，增强网页的趣味性和互动效果，提高更好的用户体验。今天我分享一篇有关事件驱动的文章，讲诉事件的来龙去脉，文章有不妥之处，还请<a href="mailto:jcguanqi@126.com" target="_blank" rel="noopener">电邮</a>反馈。</p></blockquote><h2 id="事件的起源"><a href="#事件的起源" class="headerlink" title="事件的起源"></a>事件的起源</h2><p>这节开始说事件的起源，也就是<strong>原始事件模型</strong>。这是最初始的事件处理模式，通常把它当作0级DOM的一部分，所有游览器都支持。</p><h3 id="事件以及事件类型"><a href="#事件以及事件类型" class="headerlink" title="事件以及事件类型"></a>事件以及事件类型</h3><p><strong>事件</strong>就是当用户在用鼠标或者键盘对网页进行操作时所，触发了的网页调用某个方法，反馈给用户的结果。不同的事件类型，生成的事件也不一样，反馈效果也不一样。</p><p>在原始事件模型中，事件不能被js直接操作，是游览器从内部提取的。这些事件类型都是响应事件调用时的事件句柄名称。HTML属性就可以用来处理这些事件代码。</p><p>下面是收集总结的事件句柄列表：</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">事件句柄</th><th style="text-align:left">触发条件</th><th style="text-align:left">支持元素</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">onload</td><td style="text-align:left">文档加载完毕</td><td style="text-align:left">&lt;body&gt;</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">unonload</td><td style="text-align:left">文档卸载完毕</td><td style="text-align:left">&lt;body&gt;</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">onresize</td><td style="text-align:left">调整窗口大小</td><td style="text-align:left">&lt;body&gt;</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">onabort</td><td style="text-align:left">图像加载被中断</td><td style="text-align:left">&lt;img&gt;</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">onerror</td><td style="text-align:left">图像加载发生错误</td><td style="text-align:left">&lt;img&gt;</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">onclick</td><td style="text-align:left">鼠标按下被释放</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">ondbclick</td><td style="text-align:left">双击鼠标</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">onmousedown</td><td style="text-align:left">鼠标键被按下</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">onmousemove</td><td style="text-align:left">鼠标移动</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">onmouseup</td><td style="text-align:left">释放鼠标键</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">onmouseover</td><td style="text-align:left">鼠标移到元素上</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">onmouseout</td><td style="text-align:left">鼠标离开元素</td><td style="text-align:left">大多数元素</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">onkeydown</td><td style="text-align:left">键盘被按下</td><td style="text-align:left">表单元素、&lt;body&gt;</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">onkeyup</td><td style="text-align:left">键盘被按下后释放</td><td style="text-align:left">表单元素、&lt;body&gt;</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">onkeypress</td><td style="text-align:left">键盘按下被释放，返回false取消默认</td><td style="text-align:left">表单元素、&lt;body&gt;</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">onblur</td><td style="text-align:left">元素失去焦点</td><td style="text-align:left">&lt;body&gt;&lt;input&gt;&lt;textarea&gt;&lt;button&gt;&lt;select&gt;</td></tr><tr><td style="text-align:left">17</td><td style="text-align:left">onfocus</td><td style="text-align:left">元素得到焦点</td><td style="text-align:left">&lt;body&gt;&lt;input&gt;&lt;textarea&gt;&lt;button&gt;&lt;select&gt;</td></tr><tr><td style="text-align:left">18</td><td style="text-align:left">onchange</td><td style="text-align:left">得到焦点使值发生了改变</td><td style="text-align:left">&lt;input&gt;&lt;textarea&gt;&lt;select&gt;</td></tr><tr><td style="text-align:left">19</td><td style="text-align:left">onselect</td><td style="text-align:left">选中表单文本</td><td style="text-align:left">&lt;input&gt;&lt;select&gt;&lt;textarea&gt;</td></tr><tr><td style="text-align:left">20</td><td style="text-align:left">onreset</td><td style="text-align:left">表单重置，返回false取消</td><td style="text-align:left">&lt;form&gt;</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left">onsubmit</td><td style="text-align:left">表单提交，返回false取消</td><td style="text-align:left">&lt;form&gt;</td></tr></tbody></table><p>以上是一些定义的事件列表，仔细点，你会发现列表中可以大致的分为<em>鼠标事件</em>、<em>键盘事件</em>、<em>表单事件</em>以及<em>其他事件</em>。后面会详细介绍。</p><h3 id="html属性的事件"><a href="#html属性的事件" class="headerlink" title="html属性的事件"></a>html属性的事件</h3><p>之前说过，事件是用户在对html标签进行触发时调用的js方法，用来执行一些相关的任务。</p><p>所以在html中，以上列表的事件可以被当作html的属性来使用。这里部分大小写，但是我还是习惯小写。</p><p>【例如】：给一个按钮加上事件，弹出内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"alert('你好啊，事件！');"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="js属性的事件"><a href="#js属性的事件" class="headerlink" title="js属性的事件"></a>js属性的事件</h3><p>如果不想再html属性值里面写js的方法，字符串，可以在js中写这样一个方法，然后在html属性中进行调用，同样也可以的。</p><p>【例如】：给一个输入框加上提示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">onchange</span>=<span class="string">"tips(event);"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tips</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> val = event.target.value;</span><br><span class="line">  <span class="keyword">var</span> nameReg = <span class="regexp">/^[\u4e00-\u9fa5]&#123;0,&#125;$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (!nameReg.test(val)) &#123;</span><br><span class="line">    alert(<span class="string">'请输入中文！'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以这样写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> username = <span class="built_in">document</span>.getElementsByName(<span class="string">'username'</span>)[<span class="number">0</span>];</span><br><span class="line">username.onchange = tips;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tips</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> val = event.target.value;</span><br><span class="line">  <span class="keyword">var</span> nameReg = <span class="regexp">/^[\u4e00-\u9fa5]&#123;0,&#125;$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (!nameReg.test(val)) &#123;</span><br><span class="line">    alert(<span class="string">'请输入中文！'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 或者这样</span></span><br><span class="line">username.onchange = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> val = event.target.value;</span><br><span class="line">  <span class="keyword">var</span> nameReg = <span class="regexp">/^[\u4e00-\u9fa5]&#123;0,&#125;$/</span>;</span><br><span class="line">  <span class="keyword">if</span> (!nameReg.test(val)) &#123;</span><br><span class="line">    alert(<span class="string">'请输入中文！'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="js事件的返回值"><a href="#js事件的返回值" class="headerlink" title="js事件的返回值"></a>js事件的返回值</h3><p>大多数情况下，事件都有返回值，如果是<code>true</code>就执行，不是就取消。</p><p>比如说：onclick事件，如果返回true就执行，否则不执行。</p><p>【例如】:提交表单不执行默认提交方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">onsubmit</span>=<span class="string">"return checkForm();"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实还有表单重置事件也是这样，你可以私下里去练习一下。</p><h3 id="this关键词"><a href="#this关键词" class="headerlink" title="this关键词"></a>this关键词</h3><p>js中的<code>this</code>是一个很神奇的存在，一般情况下，它都指向的是<code>Window</code>顶层全局对象，也包括函数调用。</p><p>【例如】：你打印一下这个<code>this</code>，你会发现结果是<code>Window</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">// Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, parent: Window, …&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">// Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, parent: Window, …&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">hello();</span><br></pre></td></tr></table></figure><p>但是也有其他情况，比如说对象方法调用，事件调用。这种情况下，就是<strong>谁调用，指向谁</strong>。对象里面的方法调用会指向对象本身。</p><p>【例如】：</p><ul><li>1.对象方法调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象方法调用</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  name: <span class="string">'mark'</span>,</span><br><span class="line">  sayName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">// &#123;name: "mark", sayName: ƒ&#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name); <span class="comment">// mark</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(obj.sayName()); <span class="comment">// mark</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>:如果把对象中的方法赋予另一个变量，由于这个变量是Window下的变量、属性，所以再次打印this会指向Window对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象方法调用</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  name: <span class="string">'mark'</span>,</span><br><span class="line">  sayName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">// Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, parent: Window, …&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fn = obj.sayName;</span><br><span class="line"><span class="built_in">console</span>.log(fn());</span><br></pre></td></tr></table></figure><ul><li>2.事件调用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tip"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//事件方法调用</span></span><br><span class="line"><span class="keyword">var</span> tip = <span class="built_in">document</span>.getElementById(<span class="string">'tip'</span>);</span><br><span class="line">tip.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">// &lt;button id="tip"&gt;点我&lt;/button&gt;</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.id); <span class="comment">// tip</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>在js中，有变量作用域，有函数作用域，但是所有作用域的顶层都是全局对象。</p><p>在事件句柄中，也存在作用域，但是这个作用域<strong>只是适用于html属性</strong>的事件句柄。</p><p>例如：在一个button按钮中调用了名为form的变量，那么就会解析成form属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"alert(this.form.username.value);"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在此案例中，当点我按钮点击后会把form解析成这个表单属性，从而获取到旁边输入框的值hello。</p><h2 id="事件的2级DOM标准"><a href="#事件的2级DOM标准" class="headerlink" title="事件的2级DOM标准"></a>事件的2级DOM标准</h2><p>在经历了原始事件模型后，DOM又进行了扩展，定义了一些高级的事件处理方法。这些方法除了ie游览器外其他的游览器都支持。ie有自己的处理方法，这些方法会在第三节进行补充。</p><h3 id="事件传播"><a href="#事件传播" class="headerlink" title="事件传播"></a>事件传播</h3><p>在0级DOM事件模型中，是游览器负责把事件分配到发生事件的元素，如果那个元素有合适的事件类型就会触发，不会再执行其他的操作。</p><p>但是2级DOM标准中规定的是只要事件发生在文档元素（目标元素）上，就会触发。它的上级元素也有机会触发该事件。</p><p>此时就有了事件传播，它主要是分为3个阶段进行。</p><h4 id="事件传播的捕捉阶段-capturing"><a href="#事件传播的捕捉阶段-capturing" class="headerlink" title="事件传播的捕捉阶段(capturing)"></a>事件传播的捕捉阶段(capturing)</h4><p>这个阶段事件从Document对象沿着DOM树向下传播给那个目标节点。</p><p>这个阶段是从上到下进行传播，如果在途中有目标节点的祖先注册了捕捉事件句柄，就会先执行这个事件。</p><h4 id="事件传播的第二个阶段-self"><a href="#事件传播的第二个阶段-self" class="headerlink" title="事件传播的第二个阶段(self)"></a>事件传播的第二个阶段(self)</h4><p>这个阶段已经到达了目标元素本身，直接注册在元素本身的事件就会执行。</p><h4 id="事件传播的起泡阶段-bubbling"><a href="#事件传播的起泡阶段-bubbling" class="headerlink" title="事件传播的起泡阶段(bubbling)"></a>事件传播的起泡阶段(bubbling)</h4><p>这个阶段，目标元素已经执行完自身的事件句柄了，所以这个阶段的事件就会沿着DOM树向上回到Document对象。如果在途中有目标节点的祖先有合适的事件句柄，就会先执行这个事件。</p><p>但是并非所有的事件类型都起泡，像表单这种<code>form</code>元素执行完自身事件后再往Document对象走没有意义。</p><p>一般来说，原始事件起泡，而高级语义的事件不起泡。</p><p>下面一张表就列出了哪些适用于哪个阶段的事件传播。</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">事件类型</th><th style="text-align:left">接口</th><th style="text-align:left">B(起泡)</th><th style="text-align:left">C(捕捉)</th><th style="text-align:left">支持元素/属性</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">abort</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;img&gt;</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">blur</td><td style="text-align:left">Event</td><td style="text-align:left">no</td><td style="text-align:left">no</td><td style="text-align:left">&lt;a&gt;&lt;area&gt;&lt;button&gt;&lt;input&gt;&lt;select&gt;&lt;textarea&gt;</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">change</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;input&gt;&lt;select&gt;&lt;textarea&gt;</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">click</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">error</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;body&gt;,&lt;frameset&gt;&lt;img&gt;</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">focus</td><td style="text-align:left">Event</td><td style="text-align:left">no</td><td style="text-align:left">no</td><td style="text-align:left">&lt;a&gt;&lt;area&gt;&lt;button&gt;&lt;input&gt;&lt;select&gt;&lt;textarea&gt;</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">load</td><td style="text-align:left">Event</td><td style="text-align:left">no</td><td style="text-align:left">no</td><td style="text-align:left">&lt;body&gt;&lt;frameset&gt;&lt;iframe&gt;&lt;img&gt;</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">mousedown</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">mousemove</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">mouseout</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">mouseover</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">mouseup</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">screenX,screenY,clientX,clientY,altKey,ctrlKey</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">reset</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;form&gt;</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">resize</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;body&gt;&lt;iframe&gt;&lt;frameset&gt;</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">scroll</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;body&gt;</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">select</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">&lt;input&gt;&lt;textarea&gt;</td></tr><tr><td style="text-align:left">17</td><td style="text-align:left">submit</td><td style="text-align:left">Event</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">&lt;form&gt;</td></tr><tr><td style="text-align:left">18</td><td style="text-align:left">unload</td><td style="text-align:left">Event</td><td style="text-align:left">no</td><td style="text-align:left">no</td><td style="text-align:left">&lt;body&gt;&lt;frameset&gt;</td></tr><tr><td style="text-align:left">19</td><td style="text-align:left">DOMActivate</td><td style="text-align:left">UIEvent</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">detail</td></tr><tr><td style="text-align:left">20</td><td style="text-align:left">DOMFocusIn</td><td style="text-align:left">UIEvent</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">none</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left">DOMFocusOut</td><td style="text-align:left">UIEvent</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">none</td></tr></tbody></table><p><strong>温馨提示:</strong></p><p>在事件传播的过程中，任何事件句柄都可以使用表示事件的<code>Event</code>对象提供的<code>stopPropagation()</code>方法来停止事件的传播。</p><p>也有一些事件会引起游览器对元素的默认动作，比如a标签，默认动作是超链接跳转。在事件传播阶段结束后，便会进行默认动作。可以使用<code>Event</code>对象提供的<code>preventDefault()</code>方法来阻止默认动作的发生。</p><p>在0级DOM模型中，只能为特定对象的特定类型的事件注册一个事件句柄，但是在2级模型中，就可以为特定对象的特定类型的事件注册多个事件句柄。</p><h3 id="事件句柄注册"><a href="#事件句柄注册" class="headerlink" title="事件句柄注册"></a>事件句柄注册</h3><p>在0级DOM事件中，通过html属性或者js来为元素注册事件;但在2级DOM事件中，可以调用<code>addEventListener()</code>方法来为某个元素注册事件,该方法有3个参数。</p><ul><li>第一个参数是事件类型，不加前缀on，比如：<code>onmouseover</code>要写成<code>mouseover</code>;</li><li>第二个参数是句柄函数，也就是事件发生时调用的函数;这个函数只接受唯一的<code>Event</code>对象；</li><li>第三个参数是布尔值，值为true，那就用于捕捉事件，否则就是直接发生在元素本身的事件；</li></ul><p>这个注册方法只对注册的元素有用，是独立的，可以为一个元素注册多个事件而互相不受影响的。</p><p>【例如】：</p><ul><li>为按钮注册一个点击事件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"clickme"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clickme = <span class="built_in">document</span>.getElementById(<span class="string">'clickme'</span>);</span><br><span class="line">clickme.addEventListener(<span class="string">'click'</span>,clickMe,<span class="literal">false</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickMe</span>(<span class="params">e</span>) </span>&#123;  </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.id); <span class="comment">// clickme</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>监听一个元素中发生的所有鼠标移入事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"overme"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> overme = <span class="built_in">document</span>.getElementById(<span class="string">'overme'</span>);</span><br><span class="line">overme.addEventListener(<span class="string">'mouseover'</span>,handlerMouse,<span class="literal">true</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handlerMouse</span>(<span class="params">e</span>) </span>&#123;  </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.id); <span class="comment">// clickme</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然有注册，也就有注销事件，与之对应的是方法是<code>removeEventListener()</code>,它和注册方法接受的参数一样，不过是从元素上面移除了这个事件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> overme = <span class="built_in">document</span>.getElementById(<span class="string">'overme'</span>);</span><br><span class="line">overme.removeEventListener(<span class="string">'mouseover'</span>,handlerMouse,<span class="literal">true</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handlerMouse</span>(<span class="params">e</span>) </span>&#123;  </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.id); <span class="comment">// clickme</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>小提示：</strong>这个注册方法中第二个参数的函数内部的this是指向注册事件的元素。</p><h3 id="事件模块"><a href="#事件模块" class="headerlink" title="事件模块"></a>事件模块</h3><p>在2级DOM中，事件是模块化的，所以你可以使用以下方法来测试游览器是否支持2级DOM事件模块。</p><p>下面是我封装的一个方法，只需要传入两个参数就可以查询是否支持。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">searchDomSupport</span>(<span class="params">name,version</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.implementation &amp;&amp;</span><br><span class="line">    <span class="built_in">document</span>.implementation.hasFeature &amp;&amp;</span><br><span class="line">    <span class="built_in">document</span>.implementation.hasFeature(name,version)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res = searchDomSupport(<span class="string">'Event'</span>,<span class="string">'2.0'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res); <span class="comment">// true;</span></span><br></pre></td></tr></table></figure><h3 id="Event接口和Event"><a href="#Event接口和Event" class="headerlink" title="Event接口和Event"></a>Event接口和Event</h3><p>2级DOM API提供了事件发生时事件的一些额外信息，包括事件发生的时间，类型，元素的属性等等。事件是模块化的，所以一个模块就有一个相关的事件接口，声明了该事件类型的详细信息。</p><p>Event接口就是这个事件接口，它包括以下几部分：</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">模块名</th><th style="text-align:left">事件接口</th><th style="text-align:left">事件类型</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">HTMLEvents</td><td style="text-align:left">Eevent</td><td style="text-align:left">abort,blur,change,load,resize,scroll,select</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">MouseEvents</td><td style="text-align:left">MouseEvent</td><td style="text-align:left">click,mousedown,mouseup,mouseover,mouseout</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">UIEvents</td><td style="text-align:left">UIEvent</td><td style="text-align:left">DOMActivate,DOMFocusIn,DOMFocusOut</td></tr></tbody></table><h4 id="Event的属性"><a href="#Event的属性" class="headerlink" title="Event的属性"></a>Event的属性</h4><ul><li>type,发生事件的类型，和注册事件名称一样，比如：click，mouseover；</li><li>target,发生事件的节点信息；</li><li>currentTarget,发生当前事件的节点,在事件传播过程中和target的值不一样；</li><li>eventPhase,一个数字表明当前所处的传播阶段，是一个常量；</li><li>timeStamp,一个Date()对象，表面事件发生的时间；</li><li>bubbles,一个布尔值，声明该事件是否在文档中起泡；</li><li>cancelable,一个布尔值，声明该事件是否能用preventDefault()方法；</li></ul><p>【例如】：获取按钮的点击事件的属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tips"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">'tips'</span>);</span><br><span class="line">tips.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;  </span><br><span class="line">  <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</span><br><span class="line">  <span class="built_in">console</span>.log(e.type); <span class="comment">// click</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.target); <span class="comment">// target: button#tips</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.currentTarget); <span class="comment">// null</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.eventPhase); <span class="comment">// 2</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.timeStamp); <span class="comment">// 3006.099999998696</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.bubbles); <span class="comment">// true</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.cancelable); <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Event的方法"><a href="#Event的方法" class="headerlink" title="Event的方法"></a>Event的方法</h4><ul><li>stopPropagation(),阻止事件从当前正在处理它的节点传播；</li><li>preventDefault()，阻止游览器执行节点的默认动作；</li></ul><p>【例如】:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用此函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickMe</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.stopPropagation();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//超链接跳转禁用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickMe</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UIEvent的属性"><a href="#UIEvent的属性" class="headerlink" title="UIEvent的属性"></a>UIEvent的属性</h4><ul><li>view,发生事件的Window对象；</li><li>detail，对于鼠标点击事件来说，值为1就是点击1次，为2就是点击2次。如果值为2，说明之前还有一个点击为1的事件；</li></ul><h4 id="MouseEvent的属性"><a href="#MouseEvent的属性" class="headerlink" title="MouseEvent的属性"></a>MouseEvent的属性</h4><ul><li>button,一个数字，声明在mousedown,mouseup,click事件中，哪个鼠标键改变了状态。0为左键，1为中间键，2为右键；</li><li>altKey、ctrlKey、metaKey、shiftKey,这四个值都是布尔值，声明在鼠标事件发生时，是否同时按住了这四个键盘键；<em>alt</em>,<em>ctrl</em>,<em>shift</em>,<em>meta</em>;</li><li>clientX、clientY,声明鼠标指针位于游览器窗口的X坐标和Y坐标；不考虑文档滚动，如果在顶部则clientY始终是0；在ie以外，要转换成文档坐标，而不是游览器窗口坐标；可以使用<code>window.pageXOffset</code>和<code>window.pageYOffset</code>来获取。</li><li>screenX、screenY,声明鼠标指针位于用户显示器的左上角的X坐标和Y坐标;</li><li>relatedTarget,引用事件的节点相关的节点。比如：对于mouseover，是鼠标移入目标节点离开时的那个节点；</li></ul><p>【例如】：按钮的点击事件属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tips"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">'tips'</span>);</span><br><span class="line">tips.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e.button); <span class="comment">// 0</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.altKey,e.ctrlKey,e.metaKey,e.shiftKey); <span class="comment">// false false false true</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.clientX,e.clientY); <span class="comment">// 22 17</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.screenX,e.screenY); <span class="comment">// 22 119</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.relatedTarget); <span class="comment">// null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>2级DOM事件模型是可以兼容0级DOM事件的一些属性和方法。这叫混合事件模型。</p><h2 id="IE事件模型"><a href="#IE事件模型" class="headerlink" title="IE事件模型"></a>IE事件模型</h2><p>本节介绍的是IE4、5、6支持的中间模型，它介于0级模型和2级DOM事件模型之间。包括以下几部分：</p><ul><li>Event对象，和2级DOM事件模型的Event属性有些相似；</li><li>IE事件的传播、注册和内存泄漏</li></ul><h3 id="Event对象的属性"><a href="#Event对象的属性" class="headerlink" title="Event对象的属性"></a>Event对象的属性</h3><ul><li>type,发生事件的类型，和2级DOM中的type属性兼容。比如：click，mouseover；</li><li>srcElement,发生事件的文档元素，和2级DOM中的target属性兼容；</li><li>button,声明鼠标被按下的鼠标键；值为1是左键，2为右键，4为中间键；</li><li>clientX、clientY,声明鼠标指针位于游览器窗口的X坐标和Y坐标；要转换成文档坐标,需要加文档滚动的量；</li><li>offsetX、offsetY,声明鼠标指针位于元素的位置；</li><li>altKey、ctrlKey、shiftKey,这四个值都是布尔值，声明在鼠标事件发生时，是否同时按住了这三个键盘键;</li><li>keyCode,声明在键盘事件(keydown,keyup,keypress)中的键盘码；可以用<code>String.fromCharCode()</code>方法把字符代码转换成字符串；</li><li>fromElement、toElement,fromElement声明mouseover事件移动过的文档元素，toElement声明mouseout事件移到的文档元素；</li><li>cancelBubble,布尔值为true时阻止当前事件进一步起泡到上一层次的元素；相当于2级DOM中的stopPropagation()方法；</li><li>returnValue,布尔值为false时可以阻止游览器执行默认动作，相当于2级DOM中的preventDefault()方法；</li></ul><p>【例如】：在ie游览器中进行点击事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tips"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">'tips'</span>);</span><br><span class="line">tips.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e.type); <span class="comment">// click</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.srcElement); <span class="comment">// &lt;button id="tips"&gt;点我&lt;/button&gt;</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.button); <span class="comment">// 0</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.clientX,e.clientY); <span class="comment">// 30.399999618530273 14.399999618530273</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.offsetX,e.offsetY); <span class="comment">// 29.399999618530273 11.800000190734863</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.altKey,e.ctrlKey,e.shiftKey); <span class="comment">// false false false</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.cancelBubble); <span class="comment">// false</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.returnValue); <span class="comment">// undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>IE中事件模型Event对象是作为全局的变量，在Window对象下的，所以要使用必须这样写<code>window.event</code>。</p><h3 id="IE事件注册"><a href="#IE事件注册" class="headerlink" title="IE事件注册"></a>IE事件注册</h3><p>ie4中是和0级模型一样的方法；ie5以及以后的版本是使用<code>attachEvent()</code>方法和<code>detachEvent()</code>方法，类似于2级DOM事件模型中的事件监听注册方法；但是不同的是：</p><ul><li>IE事件模型不支持事件捕捉，所以这两个方法的参数只要两个；</li><li>第一个参数的事件类型名称应该包括<code>on</code>这个前缀；例如：click要写成<code>onclick</code>;</li><li>attachEvent()方法注册的函数将作为全局函数调用，而不是事件的目标元素，this关键词指向Window;</li><li>attachEvent()方法允许注册多次，当事件发生时，注册函数的被调用次数和注册次数一样多；</li></ul><p><strong>事件起泡</strong>:IE事件模型中的事件起泡，想要阻止只能把<code>cancelBubble</code>这个属性设置为true,当新事件生成时，又会自动还原成false。</p><p><strong>事件捕捉</strong>：IE事件模型中的事件捕捉，可以使用<code>setCapture()</code>和releaseCapture()方法来实现，只是对鼠标事件适用。</p><p><strong>内存泄漏</strong>：IE6之前的嵌套函数容易引起内存泄漏。</p><h3 id="IE兼容性方法"><a href="#IE兼容性方法" class="headerlink" title="IE兼容性方法"></a>IE兼容性方法</h3><p>下面是我根据原始事件模型、2级DOM事件模型和IE事件模型，封装的一个方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uniHandler= &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.addEventListener) &#123;</span><br><span class="line">  uniHandler.add = <span class="function"><span class="keyword">function</span> (<span class="params">elem,eventType,handleEvent,isCapture</span>) </span>&#123;  </span><br><span class="line">    elem.addEventListener(eventType,handleEvent,isCapture);</span><br><span class="line">  &#125;</span><br><span class="line">  uniHandler.remove = <span class="function"><span class="keyword">function</span> (<span class="params">elem,eventType,handleEvent,isCapture</span>) </span>&#123;  </span><br><span class="line">    elem.removeEventListener(eventType,handleEvent,isCapture);</span><br><span class="line">  &#125;</span><br><span class="line">  uniHandler.stoppro = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    e.stopPropagation();</span><br><span class="line">  &#125;;</span><br><span class="line">  uniHandler.prevent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    e.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.attachEvent) &#123;</span><br><span class="line">  uniHandler.add = <span class="function"><span class="keyword">function</span> (<span class="params">elem,eventType,handleEvent</span>) </span>&#123;  </span><br><span class="line">    elem.attachEvent(<span class="string">'on'</span>+eventType,handleEvent);</span><br><span class="line">  &#125;</span><br><span class="line">  uniHandler.remove = <span class="function"><span class="keyword">function</span> (<span class="params">elem,eventType,handleEvent</span>) </span>&#123;  </span><br><span class="line">    elem.detachEvent(<span class="string">'on'</span>+eventType,handleEvent);</span><br><span class="line">  &#125;</span><br><span class="line">  uniHandler.stoppro = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    e.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  uniHandler.prevent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    e.returnValue = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  uniHandler.eventOrigin = <span class="function"><span class="keyword">function</span> (<span class="params">elem,eventType,handleEvent</span>) </span>&#123;  </span><br><span class="line">    elem.eventType = handleEvent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【例如】:在ie和非ie游览器中测试，均没有问题；ie包括ie5-11。</p><ul><li>一个按钮注册点击事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tips"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">'tips'</span>);</span><br><span class="line">uniHandler.add(tips,<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">'你好！'</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><ul><li>一个链接注册点击事件，并且阻止游览器默认动作</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"goto"</span> <span class="attr">href</span>=<span class="string">"#111"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> goto = <span class="built_in">document</span>.getElementById(<span class="string">'goto'</span>);</span><br><span class="line">uniHandler.add(goto,<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</span><br><span class="line">  uniHandler.prevent(e);</span><br><span class="line">  alert(<span class="string">'我不走！'</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>有关DOM中的事件今天就说到这里，还有不明白的可以到前面去仔细看看，多练练，你就会了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在js中，具有交互性程序的是事件驱动。它可以很好的和用户进行互动，增强网页的趣味性和互动效果，提高更好的用户体验。今天我分享一篇有关事件驱动的文章，讲诉事件的来龙去脉，文章有不妥之处，还请&lt;a href=&quot;m
      
    
    </summary>
    
      <category term="javascript" scheme="https://guanqi.xyz/categories/javascript/"/>
    
    
      <category term="javascript" scheme="https://guanqi.xyz/tags/javascript/"/>
    
      <category term="events" scheme="https://guanqi.xyz/tags/events/"/>
    
  </entry>
  
</feed>
